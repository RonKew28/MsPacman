{"version":3,"sources":["webpack:///webpack/bootstrap 7c24f645777f71073de2","webpack:///./lib/blocks/block.js","webpack:///./lib/moving_objects/moving_object.js","webpack:///./lib/util.js","webpack:///./lib/stationary_objects/stationary_object.js","webpack:///./lib/breadth_first_search.js","webpack:///./lib/board.js","webpack:///./lib/game.js","webpack:///./lib/game_view.js","webpack:///./lib/moving_objects/blinky.js","webpack:///./lib/moving_objects/clyde.js","webpack:///./lib/moving_objects/pacman.js","webpack:///./lib/moving_objects/pinky.js","webpack:///./lib/node.js","webpack:///./lib/stationary_objects/large_dot.js","webpack:///./lib/stationary_objects/small_dot.js","webpack:///./lib/grids.js","webpack:///./lib/blocks/horizontal_border_single.js","webpack:///./lib/blocks/left_lower_connector.js","webpack:///./lib/blocks/left_upper_connector.js","webpack:///./lib/blocks/left_vertical_border.js","webpack:///./lib/blocks/lower_horizontal_border.js","webpack:///./lib/blocks/lower_left_connector.js","webpack:///./lib/blocks/lower_left_corner.js","webpack:///./lib/blocks/lower_left_corner_single.js","webpack:///./lib/blocks/lower_right_connector.js","webpack:///./lib/blocks/lower_right_corner.js","webpack:///./lib/blocks/lower_right_corner_single.js","webpack:///./lib/blocks/right_lower_connector.js","webpack:///./lib/blocks/right_upper_connector.js","webpack:///./lib/blocks/right_vertical_border.js","webpack:///./lib/blocks/upper_horizontal_border.js","webpack:///./lib/blocks/upper_left_connector.js","webpack:///./lib/blocks/upper_left_corner.js","webpack:///./lib/blocks/upper_left_corner_single.js","webpack:///./lib/blocks/upper_right_connector.js","webpack:///./lib/blocks/upper_right_corner.js","webpack:///./lib/blocks/upper_right_corner_single.js","webpack:///./lib/blocks/vertical_border_single.js","webpack:///./lib/moving_objects/inky.js","webpack:///./lib/ms_pacman.js","webpack:///./lib/stationary_objects/player_score.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;AChEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;;AAEA;;;;;;;;;ACnDA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACfA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,OAAO;AACP;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;;AAEA;;;;;;;AC/DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,mBAAmB,0BAA0B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC,qBAAqB,yBAAyB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;;;;AAIL;;;AAGA;;AAEA;;;;;;;AC5iBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,8BAA8B,EAAE;AACpD,KAAK;AACL;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA,WAAW;;AAEX,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC5DA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;;AAEA;AACA;AACA;;AAEA;;;;AAIA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL,qBAAqB,4BAA4B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;;AAGA;;AAEA;;;;;;;ACrOA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;;AAEA;AACA;AACA;;AAEA;;;;AAIA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,qBAAqB,kBAAkB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;;AAGA;;AAEA;;;;;;;AC9NA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,OAAO;;AAEP;AACA;AACA;AACA;;AAEA,OAAO;;AAEP;AACA;AACA;AACA;;AAEA,OAAO;;AAEP;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;;AAEA;;AAEA;;;;;;;ACzQA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;;AAEA;AACA;AACA;;AAEA;;;;AAIA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,qBAAqB,kBAAkB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;;AAGA;;AAEA;;;;;;;;AC7NA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;ACZA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC9BA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC7CA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACZA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACdA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACdA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACdA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACdA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACdA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACbA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACZA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACdA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACbA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACZA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACdA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACdA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACdA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACdA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACdA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACdA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACZA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACdA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACbA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACZA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACZA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;;AAEA;AACA;AACA;;AAEA;;;;AAIA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL,qBAAqB,6BAA6B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;;AAGA;;AAEA;;;;;;;AC1NA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;;;AAKA,CAAC;;;;;;;ACtED;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 39);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 7c24f645777f71073de2","class Block {\n  constructor(pos, ctx, color) {\n    this.ctx = ctx;\n    this.ctx.lineWidth = 3;\n    this.ctx.strokeStyle = 'orange';\n    this.ctx.setLineDash([0, 0]);\n    this.width = 20;\n    this.height = 20;\n    this.posX = $('canvas').position().left + 1 + pos[0] * this.width;\n    this.posY = $('canvas').position().top + 1 + pos[1] * this.height;\n  }\n}\n\nmodule.exports = Block;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/blocks/block.js\n// module id = 0\n// module chunks = 0","\nclass MovingObject {\n  constructor(start_pos, pos, vel, sprites, board) {\n    this.start_pos = start_pos;\n    this.pos = pos;\n    this.vel = vel;\n    this.sprites = sprites;\n    this.board = board;\n    this.spritesLocations = {\n      pacmanLeft: [[800, 380, 40, 40], [800, 280, 40, 44], [800, 330, 40, 42], [800, 280, 40, 44]],\n      pacmanRight: [[800, 0, 40, 44], [800, 100, 40, 40], [800, 50, 40, 42], [800, 100, 40, 40]],\n      pacmanUp: [[800, 425, 40, 40], [800, 475, 40, 40], [800, 525, 40, 40], [800, 475, 40, 40] ],\n      pacmanDown: [[800, 145, 40, 40], [800, 237, 40, 42], [800, 189, 40, 40], [800, 237, 40, 42] ],\n      blinkyLeft: [[610, 190, 40, 40], [610, 235, 40, 40]],\n      blinkyRight: [[612, 3, 40, 43], [612, 48, 40, 43]],\n      blinkyUp: [[612, 283, 40, 43], [612, 328, 40, 43]],\n      blinkyDown: [[612, 95, 40, 43], [612, 143, 40, 43]],\n      pinkyLeft: [[657, 190, 40, 40], [657, 235, 40, 40]],\n      pinkyRight: [[659, 3, 40, 43], [659, 48, 40, 43]],\n      pinkyUp: [[659, 283, 40, 43], [659, 328, 40, 43]],\n      pinkyDown: [[659, 95, 40, 43], [659, 143, 40, 43]],\n      inkyLeft: [[702, 190, 40, 40], [702, 235, 40, 40]],\n      inkyRight: [[704, 3, 40, 43], [704, 48, 40, 43]],\n      inkyUp: [[704, 283, 40, 43], [704, 328, 40, 43]],\n      inkyDown: [[704, 95, 40, 43], [704, 143, 40, 43]],\n      clydeLeft: [[749, 190, 40, 40], [749, 235, 40, 40]],\n      clydeRight: [[751, 3, 40, 43], [751, 48, 40, 43]],\n      clydeUp: [[751, 283, 40, 43], [751, 328, 40, 43]],\n      clydeDown: [[751, 95, 40, 43], [751, 143, 40, 43]],\n    };\n  }\n\n  currentBlockPos(pos) {\n    let dx = 20;\n    let dy = 20;\n    let closestBlockXPos = Math.floor((pos[0] - 1) / dx);\n    let closestBlockYPos = Math.floor((pos[1] - 1) / dy);\n    var currentBlockXPos = (dx * closestBlockXPos) + (dx / 2) + 1;\n    var currentBlockYPos = (dy * closestBlockYPos) + (dy / 2) + 1;\n    return [currentBlockXPos, currentBlockYPos];\n  }\n\n  warp() {\n   var warpPosX = [this.board.levelDim[0][0]- 20 - 1, this.board.levelDim[0][1] + 20 + 3]\n   if(this.pos[0] < warpPosX[0]){\n     this.pos[0] = warpPosX[1];\n   } else if(this.pos[0] > warpPosX[1]) {\n     this.pos[0] = warpPosX[0];\n   }\n }\n\n}\n\nmodule.exports = MovingObject;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/moving_objects/moving_object.js\n// module id = 1\n// module chunks = 0","\n\nconst Util = {\n\n  distance(start, dest) {\n    var dx = Math.abs(start[0] - dest[0]);\n    var dy = Math.abs(start[1] - dest[1]);\n    return dx + dy;\n  },\n\n  isEmpty(arr) {\n    return arr.length === 0;\n  },\n\n  equals(arr1, arr2) {\n    if (arr1 && arr2 && (arr1[0] === arr2[0] && arr1[1] === arr2[1])) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n};\n\nmodule.exports = Util;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/util.js\n// module id = 2\n// module chunks = 0","class StationaryObject {\n  constructor(pos, sprites, dotstx, scoretx, board) {\n    this.pos = pos;\n    this.sprites = sprites;\n    this.dotstx = dotstx;\n    this.scoretx = scoretx;\n    this.board = board;\n    this.spritesLocations = {\n      smallDot: [392, 250, 14, 14],\n      largeDot: [389, 295, 20, 20],\n      playerScore: [389, 295, 20, 20]\n    };\n  }\n}\n\nmodule.exports = StationaryObject;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/stationary_objects/stationary_object.js\n// module id = 3\n// module chunks = 0","const Util = require('./util');\nconst Node = require('./node');\nconst Board = require('./board');\n\nclass BreadthFirstSearch {\n  constructor(node, start, dest, board) {\n    this.node = node;\n    this.start = start;\n    this.dest = dest;\n    this.board = board;\n    this.queue = [];\n    this.parents = {};\n    this.initializeQueue = this.initializeQueue.bind(this);\n  }\n\n  initializeQueue() {\n    this.queue.push(this.node);\n  }\n\n  findParents() {\n    this.initializeQueue();\n    this.parents[this.start] = \"none\";\n    while (!Util.isEmpty(this.queue)) {\n      var currentNode = this.queue.shift();\n      if(Util.equals(currentNode.pos, this.dest)) {\n        break;\n      }\n      let board = this.board;\n      let queue = this.queue;\n      let parents = this.parents;\n\n      currentNode.neighbors.forEach(function (neighbor) {\n\n        if (!parents['' + JSON.stringify(neighbor.pos)]) {\n          var newNode = board.nodes['' + JSON.stringify(neighbor.pos)];\n\n          queue.push(newNode);\n          parents[JSON.stringify(neighbor.pos)] = currentNode;\n        }\n\n      });\n    }\n    return this.parents;\n\n  }\n\n  createPath(parents, start, dest) {\n\n    var current = dest;\n    var path = [current];\n\n    while (!(Util.equals(current, start))) {\n      current = parents['' + JSON.stringify(current)].pos;\n\n      path.push(current);\n    }\n\n    return path;\n  }\n\n\n}\n\nmodule.exports = BreadthFirstSearch;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/breadth_first_search.js\n// module id = 4\n// module chunks = 0","const Block = require('./blocks/block');\nconst UpperLeftCorner = require('./blocks/upper_left_corner');\nconst UpperRightCorner = require('./blocks/upper_right_corner');\nconst LowerLeftCorner = require('./blocks/lower_left_corner');\nconst LowerRightCorner = require('./blocks/lower_right_corner');\nconst UpperHorizontalBorder = require('./blocks/upper_horizontal_border');\nconst LowerHorizontalBorder = require('./blocks/lower_horizontal_border');\nconst LeftVerticalBorder = require('./blocks/left_vertical_border');\nconst RightVerticalBorder = require('./blocks/right_vertical_border');\nconst UpperLeftConnector = require('./blocks/upper_left_connector');\nconst UpperRightConnector = require('./blocks/upper_right_connector');\nconst LowerLeftConnector = require('./blocks/lower_left_connector');\nconst LowerRightConnector = require('./blocks/lower_right_connector');\nconst LeftUpperConnector = require('./blocks/left_upper_connector');\nconst LeftLowerConnector = require('./blocks/left_lower_connector');\nconst RightUpperConnector = require('./blocks/right_upper_connector');\nconst RightLowerConnector = require('./blocks/right_lower_connector');\nconst UpperLeftCornerSingle = require('./blocks/upper_left_corner_single');\nconst UpperRightCornerSingle = require('./blocks/upper_right_corner_single');\nconst LowerLeftCornerSingle = require('./blocks/lower_left_corner_single');\nconst LowerRightCornerSingle = require('./blocks/lower_right_corner_single');\nconst HorizontalBorderSingle = require('./blocks/horizontal_border_single');\nconst VerticalBorderSingle = require('./blocks/vertical_border_single');\n\nconst MovingObject = require('./moving_objects/moving_object');\nconst Pacman = require('./moving_objects/pacman');\nconst Blinky = require('./moving_objects/blinky');\nconst Pinky = require('./moving_objects/pinky');\nconst Clyde = require('./moving_objects/clyde');\nconst Inky = require('./moving_objects/inky');\n\nconst StationaryObject = require('./stationary_objects/stationary_object');\nconst SmallDot = require('./stationary_objects/small_dot');\nconst LargeDot = require('./stationary_objects/large_dot');\nconst PlayerScore = require('./stationary_objects/player_score');\n\nconst Node = require('./node');\n\nclass Board {\n  constructor(grid, ctx, gtx, ptx, blinkytx, pinkytx, clydetx, inkytx, dotstx, scoretx, menutx) {\n    this.blocks = [];\n    this.intersections = {};\n    this.intersectionsArray = [];\n    this.cageNodes = {};\n    this.cageCorridor = {};\n    this.wallCollisions = {};\n    this.stationaryObjects = {};\n    this.levelDim = [];\n    this.ghostRespawn = [];\n    this.nodes = {};\n\n    this.grid = grid;\n    this.ctx = ctx;\n    this.gtx = gtx;\n    this.ptx = ptx;\n    this.blinkytx = blinkytx;\n    this.pinkytx = pinkytx;\n    this.clydetx = clydetx;\n    this.inkytx = inkytx;\n    this.dotstx = dotstx;\n    this.scoretx = scoretx;\n    this.menutx = menutx;\n\n    this.movingObjectsArr = [];\n    this.stationaryObjectsArr = [];\n    this.scoreBoard = null;\n    this.setBoardDims();\n  }\n\n  drawGrid() {\n\n    this.gtx.strokeStyle = 'grey';\n    var dx = 20;\n    var dy = 20;\n\n    for (let x = 0; x <= this.grid[0].length; x++) {\n      let startXPos = $('#grid-layer').position().left + (x * dx);\n      let startYPos = $('#grid-layer').position().top;\n      let endYPos = startYPos + (this.grid.length * dy);\n      this.gtx.setLineDash([2, 3]);\n      this.gtx.moveTo(startXPos, startYPos);\n      this.gtx.lineTo(startXPos, endYPos);\n    }\n\n    for (let y = 0; y <= this.grid.length; y++) {\n      let startXPos = $('#grid-layer').position().left;\n      let startYPos = $('#grid-layer').position().top + (y * dy);\n      let endXPos = startXPos + (this.grid[0].length * dx);\n      this.gtx.setLineDash([2, 3]);\n      this.gtx.moveTo(startXPos, startYPos);\n      this.gtx.lineTo(endXPos, startYPos);\n    }\n\n    this.gtx.stroke();\n  }\n\n  setBoardDims() {\n    var dx = 20;\n    var dy = 20;\n    var dimX = this.grid[0].length;\n    var dimY = this.grid.length;\n    var startXPos = $(\"#grid-layer\").position().left;\n    var startYPos = $(\"#grid-layer\").position().top;\n    this.levelDim = [ [startXPos, startXPos + (dimX * dx)], [startYPos, startYPos + (dimY * dy)] ];\n  }\n\n  isOutOfBounds(pos) {\n    if ( (pos[0] < this.levelDim[0][0] + 1) || (pos[0] > this.levelDim[0][1]) ) {\n      return true;\n    }\n  }\n\n  addWallCollision(x, y) {\n    var dx = 20;\n    var dy = 20;\n    var collisionPosX = $('#level-layer').position().left + 1 + (x * dx) + (dx / 2);\n    var collisionPosY = $('#level-layer').position().top + 1 + (y * dy) + (dy / 2);\n    var collisionPos = [collisionPosX, collisionPosY];\n    collisionPos = JSON.stringify(collisionPos);\n    this.wallCollisions[\"\" + collisionPos] = 1;\n  }\n\n  isBlankSquare(value) {\n    if (value === 0 || value === \"P\" || value === \"I\" || value === \"N\" || value === 97 || value === 96) {\n      return true;\n    }\n  }\n\n  isCageObject(value) {\n    if (value === \"E\" || value === \"C\" || value === \"B\") {\n      return true;\n    }\n  }\n\n\n\n  addIntersection(posX, posY) {\n    var intersectionPos = [posX, posY];\n    this.intersections[\"\" + JSON.stringify(intersectionPos)] = 1;\n    this.intersectionsArray.push(intersectionPos);\n  }\n\n\n  isIntersection(x, y) {\n    return (this.isBlankSquare(this.grid[y+1][x]) || this.isBlankSquare(this.grid[y-1][x]) && this.isBlankSquare(this.grid[y][x+1]) || this.isBlankSquare(this.grid[y][x-1]));\n  }\n\n  buildWalls(x, y) {\n    let pos = [x, y];\n    let ctx = this.ctx;\n\n    if(this.grid[y][x] === 1) {\n      var block = new LeftVerticalBorder(pos, ctx);\n      this.blocks.push(block);\n      this.addWallCollision(x, y);\n    }\n\n    if(this.grid[y][x] === -1) {\n      var block = new RightVerticalBorder(pos, ctx);\n      this.blocks.push(block);\n      this.addWallCollision(x, y);\n    }\n\n    if(this.grid[y][x] === 2) {\n      var block = new UpperHorizontalBorder(pos, ctx);\n      this.blocks.push(block);\n      this.addWallCollision(x, y);\n    }\n\n    if(this.grid[y][x] === -2) {\n      var block = new LowerHorizontalBorder(pos, ctx);\n      this.blocks.push(block);\n      this.addWallCollision(x, y);\n    }\n\n    if(this.grid[y][x] === 3) {\n      var block = new UpperLeftConnector(pos, ctx);\n      this.blocks.push(block);\n      this.addWallCollision(x, y);\n    }\n\n    if(this.grid[y][x] === -3) {\n      var block = new LowerLeftConnector(pos, ctx);\n      this.blocks.push(block);\n      this.addWallCollision(x, y);\n    }\n\n    if(this.grid[y][x] === 4) {\n      var block = new UpperRightConnector(pos, ctx);\n      this.blocks.push(block);\n      this.addWallCollision(x, y);\n    }\n\n    if(this.grid[y][x] === -4) {\n      var block = new LowerRightConnector(pos, ctx);\n      this.blocks.push(block);\n      this.addWallCollision(x, y);\n    }\n\n    if(this.grid[y][x] === 5) {\n      var block = new UpperLeftCorner(pos, ctx);\n      this.blocks.push(block);\n      this.addWallCollision(x, y);\n    }\n\n    if(this.grid[y][x] === -5) {\n      var block = new LowerLeftCorner(pos, ctx);\n      this.blocks.push(block);\n      this.addWallCollision(x, y);\n    }\n\n    if(this.grid[y][x] === 6) {\n      var block = new UpperRightCorner(pos, ctx);\n      this.blocks.push(block);\n      this.addWallCollision(x, y);\n    }\n\n    if(this.grid[y][x] === -6) {\n      var block = new LowerRightCorner(pos, ctx);\n      this.blocks.push(block);\n      this.addWallCollision(x, y);\n    }\n\n    if(this.grid[y][x] === 7) {\n      var block = new UpperLeftCornerSingle(pos, ctx);\n      this.blocks.push(block);\n      this.addWallCollision(x, y);\n    }\n\n    if(this.grid[y][x] === -7) {\n      var block = new LowerLeftCornerSingle(pos, ctx);\n      this.blocks.push(block);\n      this.addWallCollision(x, y);\n    }\n\n    if(this.grid[y][x] === 8) {\n      var block = new UpperRightCornerSingle(pos, ctx);\n      this.blocks.push(block);\n      this.addWallCollision(x, y);\n    }\n\n    if(this.grid[y][x] === -8) {\n      var block = new LowerRightCornerSingle(pos, ctx);\n      this.blocks.push(block);\n      this.addWallCollision(x, y);\n    }\n\n    if(this.grid[y][x] === 9) {\n      var block = new HorizontalBorderSingle(pos, ctx);\n      this.blocks.push(block);\n      this.addWallCollision(x, y);\n    }\n\n    if(this.grid[y][x] === 10) {\n      var block = new VerticalBorderSingle(pos, ctx);\n      this.blocks.push(block);\n      this.addWallCollision(x, y);\n    }\n\n    if(this.grid[y][x] === 11) {\n      var block = new LeftUpperConnector(pos, ctx);\n      this.blocks.push(block);\n      this.addWallCollision(x, y);\n    }\n\n    if(this.grid[y][x] === 12) {\n      var block = new LeftLowerConnector(pos, ctx);\n      this.blocks.push(block);\n      this.addWallCollision(x, y);\n    }\n\n    if(this.grid[y][x] === 13) {\n      var block = new RightUpperConnector(pos, ctx);\n      this.blocks.push(block);\n      this.addWallCollision(x, y);\n    }\n\n    if(this.grid[y][x] === 14) {\n      var block = new RightLowerConnector(pos, ctx);\n      this.blocks.push(block);\n      this.addWallCollision(x, y);\n    }\n  }\n\n  initializeMovingObjects(x, y) {\n    let dx = 20;\n    let dy = 20;\n\n    if(this.grid[y][x] === \"P\") {\n      var posX = $('#level-layer').position().left + 1 + (x * dx) + dx;\n      var posY = $('#level-layer').position().top + 1 + (y * dy) + (dy / 2);\n      var msPacman = new Pacman([posX, posY], [posX, posY], [0,0], this.sprites, this, this.ptx, this.gtx, this.dotstx);\n      this.movingObjectsArr.push(msPacman);\n    }\n\n    if(this.grid[y][x] === \"B\") {\n\n      var posX = $('#level-layer').position().left + 1 + (x * dx) + dx;\n      var posY = $('#level-layer').position().top + 1 + (y * dy) + (dy / 2);\n      var blinky = new Blinky([posX, posY], [posX, posY], [0,0], this.sprites, this, this.blinkytx, this.gtx, this.dotstx);\n      this.movingObjectsArr.push(blinky);\n    }\n\n    if(this.grid[y][x] === \"E\") {\n      var posX = $('#level-layer').position().left + 1 + (x * dx) + dx;\n      var posY = $('#level-layer').position().top + 1 + (y * dy) + (dy / 2);\n      var pinky = new Pinky([posX, posY], [posX, posY], [0,0], this.sprites, this, this.pinkytx, this.gtx, this.dotstx);\n      this.movingObjectsArr.push(pinky);\n    }\n\n    if(this.grid[y][x] === \"N\") {\n      var posX = $('#level-layer').position().left + 1 + (x * dx) + dx;\n      var posY = $('#level-layer').position().top + 1 + (y * dy) + (dy / 2);\n      var clyde = new Clyde([posX, posY], [posX, posY], [0,0], this.sprites, this, this.clydetx, this.gtx, this.dotstx);\n      this.movingObjectsArr.push(clyde);\n\n      var node = new Node([posX, posY]);\n      this.nodes['' + JSON.stringify([posX, posY])] = node;\n      var neighborPosX = $('#level-layer').position().left + 1 + ((x-1) * dx) + (dx / 2);\n      var neighborPosY = $('#level-layer').position().top + 1 + (y * dy) + (dy / 2);\n      var neighborNode = new Node([neighborPosX, neighborPosY]);\n      node.addNeighbor(neighborNode);\n      this.cageNodes['' + JSON.stringify([neighborPosX, neighborPosY])] = 1;\n      this.cageNodes['' + JSON.stringify([posX, posY])] = 1;\n\n    }\n\n    if(this.grid[y][x] === \"I\") {\n      var posX = $('#level-layer').position().left + 1 + (x * dx) + dx;\n      var posY = $('#level-layer').position().top + 1 + (y * dy) + (dy / 2);\n      var inky = new Inky([posX, posY], [posX, posY], [0,0], this.sprites, this, this.inkytx, this.gtx, this.dotstx);\n      this.movingObjectsArr.push(inky);\n\n      var node = new Node([posX, posY]);\n      this.nodes['' + JSON.stringify([posX, posY])] = node;\n      var neighborPosX = $('#level-layer').position().left + 1 + ((x+1) * dx) + (dx / 2);\n      var neighborPosY = $('#level-layer').position().top + 1 + (y * dy) + (dy / 2);\n      var neighborNode = new Node([neighborPosX, neighborPosY]);\n      node.addNeighbor(neighborNode);\n      this.cageNodes['' + JSON.stringify([neighborPosX, neighborPosY])] = 1;\n      this.cageNodes['' + JSON.stringify([posX, posY])] = 1;\n\n    }\n  }\n\n  initializeNodes(x, y) {\n    let dx = 20;\n    let dy = 20;\n    if(this.isBlankSquare(this.grid[y][x]) && y !== 0 && y !== 1 && y !== 2 && y !== 34 && y !== 35) {\n      var posX = $('#level-layer').position().left + 1 + (x * dx) + (dx / 2);\n      var posY = $('#level-layer').position().top  + 1 + (y * dy) + (dy / 2);\n      var node = new Node([posX, posY]);\n      this.nodes['' + JSON.stringify([posX, posY])] = node;\n\n      if(this.isBlankSquare(this.grid[y][x + 1])) {\n        var neighborPosX = $(\"#level-layer\").position().left + 1 + ((x + 1) * dx) + (dx / 2);\n        var neighborPosY = $(\"#level-layer\").position().top + 1 + (y * dy) + (dy / 2);\n        node.addNeighbor(new Node([ neighborPosX, neighborPosY]));\n      }\n\n      if(this.isBlankSquare(this.grid[y][x - 1])) {\n        var neighborPosX = $(\"#level-layer\").position().left + 1 + ((x - 1) * dx) + (dx / 2);\n        var neighborPosY = $(\"#level-layer\").position().top + 1 + (y * dy) + (dy / 2);\n        node.addNeighbor(new Node([ neighborPosX, neighborPosY]));\n      }\n\n      if(this.isBlankSquare(this.grid[y + 1][x])) {\n        var neighborPosX = $(\"#level-layer\").position().left + 1 + (x * dx) + (dx / 2);\n        var neighborPosY = $(\"#level-layer\").position().top + 1 + ((y + 1) * dy) + (dy / 2);\n        node.addNeighbor(new Node([ neighborPosX, neighborPosY]));\n      }\n\n      if(this.isBlankSquare(this.grid[y - 1][x])) {\n        var neighborPosX = $(\"#level-layer\").position().left + 1 + (x * dx) + (dx / 2);\n        var neighborPosY = $(\"#level-layer\").position().top + 1 + ((y - 1) * dy) + (dy / 2);\n        node.addNeighbor(new Node([ neighborPosX, neighborPosY]));\n      }\n\n      if(this.isCageObject(this.grid[y][x + 1])) {\n        var neighborPosX = $('#level-layer').position().left + 1 + ((x + 1) * dx) + dx;\n        var neighborPosY = $('#level-layer').position().top + 1 + (y * dy) + (dy / 2);\n        var neighborNode = new Node([neighborPosX, neighborPosY]);\n\n        var dividerNodePosX = $('#level-layer').position().left + 1 + ((x + 1) * dx) + (dx / 2);\n        var dividerNodePosY = $('#level-layer').position().top + 1 + (y * dy) + (dy / 2);\n        var dividerNode = new Node([dividerNodePosX, dividerNodePosY]);\n\n        dividerNode.addNeighbor(neighborNode);\n        dividerNode.addNeighbor(node);\n        node.addNeighbor(dividerNode);\n        this.nodes['' + JSON.stringify([dividerNodePosX, dividerNodePosY])] = dividerNode;\n      }\n\n      if(this.isCageObject(this.grid[y][x - 1])) {\n        var neighborPosX = $('#level-layer').position().left + 1 + ((x - 2) * dx) + dx;\n        var neighborPosY = $('#level-layer').position().top + 1 + (y * dy) + (dy / 2);\n        var neighborNode = new Node([neighborPosX, neighborPosY]);\n\n        var dividerNodePosX = $('#level-layer').position().left + 1 + ((x - 1) * dx) + (dx / 2);\n        var dividerNodePosY = $('#level-layer').position().top + 1 + (y * dy) + (dy / 2);\n        var dividerNode = new Node([dividerNodePosX, dividerNodePosY]);\n\n        dividerNode.addNeighbor(neighborNode);\n        dividerNode.addNeighbor(node);\n        node.addNeighbor(dividerNode);\n        this.nodes['' + JSON.stringify([dividerNodePosX, dividerNodePosY])] = dividerNode;\n      }\n\n      if (this.isIntersection(x, y)) {\n        var xPosX = $('#level-layer').position().left + 1 + (x * dx) + (dx / 2);\n        var xPosY = $('#level-layer').position().top + 1 + (y * dy) + (dy / 2);\n        this.addIntersection(xPosX, xPosY);\n      }\n\n    }\n  }\n\n  initializeCage(x, y) {\n    let dx = 20;\n    let dy = 20;\n     if(this.isCageObject(this.grid[y][x]) && !this.isCageObject(this.grid[y][x-1])) {\n          var posX = $('#level-layer').position().left + 1 + (x * dx) + dx;\n          var posY = $('#level-layer').position().top + 1 + (y * dy) + (dy / 2);\n          var node = new Node([posX, posY]);\n          this.nodes['' + JSON.stringify([posX, posY])] = node;\n\n          if(this.isBlankSquare(this.grid[y][x + 1])) {\n            var neighborPosX = $('#level-layer').position().left + 1 + ((x + 1) * dx) + (dx / 2);\n            var neighborPosY = $('#level-layer').position().top + 1 + (y * dy) + (dy / 2);\n            var neighborNode =  new Node([neighborPosX, neighborPosY]);\n            node.addNeighbor(neighborNode);\n          }\n          if(this.isBlankSquare(this.grid[y][x - 1])) {\n            var neighborPosX = $('#level-layer').position().left + 1 + ((x - 1) * dx) + (dx / 2);\n            var neighborPosY = $('#level-layer').position().top + 1 + (y * dy) + (dy / 2);\n            var neighborNode =  new Node([neighborPosX, neighborPosY]);\n            var dividerNodePosX = $('#level-layer').position().left + 1 + (x * dx) + (dx / 2);\n            var dividerNodePosY = $('#level-layer').position().top + 1 + (y * dy) + (dy / 2);\n            var dividerNode = new Node([dividerNodePosX, dividerNodePosY]);\n            node.addNeighbor(dividerNode);\n          }\n\n          if(this.isBlankSquare(this.grid[y + 1][x])) {\n            var neighborPosX = $('#level-layer').position().left + 1 + (x * dx) + (dx / 2);\n            var neighborPosY = $('#level-layer').position().top + 1 + ((y + 1) * dy) + (dy / 2);\n            var neighborNode =  new Node([neighborPosX, neighborPosY]);\n            node.addNeighbor(neighborNode);\n          }\n\n          if(this.isBlankSquare(this.grid[y - 1][x])) {\n            var neighborPosX = $('#level-layer').position().left + 1 + (x * dx) + (dx / 2);\n            var neighborPosY = $('#level-layer').position().top + 1 + ((y - 1) * dy) + (dy / 2);\n            var neighborNode =  new Node([neighborPosX, neighborPosY]);\n            node.addNeighbor(neighborNode);\n          }\n\n          if(this.isCageObject(this.grid[y][x +1])) {\n            if(this.isBlankSquare(this.grid[y][x + 2])) {\n              var neighborPosX = $('#level-layer').position().left + 1 + ((x + 2) * dx) + (dx / 2);\n              var neighborPosY = $('#level-layer').position().top + 1 + (y * dy) + (dy / 2);\n              var neighborNode =  new Node([neighborPosX, neighborPosY]);\n\n              var dividerNodePosX = $('#level-layer').position().left + 1 + ((x + 1) * dx) + (dx / 2);\n              var dividerNodePosY = $('#level-layer').position().top + 1 + (y * dy) + (dy / 2);\n              var dividerNode = new Node([dividerNodePosX, dividerNodePosY]);\n              node.addNeighbor(dividerNode);\n            }\n          }\n\n          if(this.isCageObject(this.grid[y-1][x])) {\n            var neighborPosX = $('#level-layer').position().left + 1 + (x * dx) + dx;\n            var neighborPosY = $('#level-layer').position().top + 1 + ((y - 1) * dy) + (dy / 2);\n            var neighborNode =  new Node([neighborPosX, neighborPosY]);\n            node.addNeighbor(neighborNode);\n          }\n\n          if(this.isCageObject(this.grid[y+1][x])) {\n            var neighborPosX = $('#level-layer').position().left + 1 + (x * dx) + dx;\n            var neighborPosY = $('#level-layer').position().top + 1 + ((y + 1) * dy) + (dy / 2);\n            var neighborNode =  new Node([neighborPosX, neighborPosY]);\n            node.addNeighbor(neighborNode);\n          }\n          var intersectionPos = JSON.stringify([posX, posY]);\n          this.cageNodes[\"\" + intersectionPos] = 1;\n        }\n\n        if(this.isCageObject(this.grid[y][x])) {\n          var posX = $('#level-layer').position().left + 1 + (x * dx) + (dx / 2);\n          var posY = $('#level-layer').position().top + 1 + (y * dy) + (dy / 2);\n          this.cageCorridor['' + JSON.stringify([posX, posY])] = 1;\n        }\n  }\n\n  createDots(x, y) {\n    let dx = 20;\n    let dy = 20;\n    if (this.grid[y][x] === 0) {\n      var posX = $('#level-layer').position().left + 1 + (x * dx) + (dx / 2);\n      var posY = $('#level-layer').position().top + 1 + (y * dy) + (dy / 2);\n      var dot = new SmallDot([posX, posY], this.sprites, this.dotstx);\n      this.stationaryObjects[[posX, posY]] = dot;\n    }\n\n    if (this.grid[y][x] === 96) {\n      var posX = $('#level-layer').position().left + 1 + (x * dx) + (dx / 2);\n      var posY = $('#level-layer').position().top + 1 + (y * dy) + (dy / 2);\n      var dot = new LargeDot([posX, posY], this.sprites, this.dotstx);\n      this.stationaryObjects[[posX, posY]] = dot;\n    }\n  }\n\n  createScoreBoard() {\n    var posX = $('#level-layer').position().left + 430;\n    var posY = $('#level-layer').position().top + 20;\n    var playerScore = new PlayerScore([posX, posY], this.sprites, this.dotstx, this.scoretx, this);\n    this.scoreBoard = playerScore;\n    this.scoreBoard.score = 0;\n  }\n\n  initializeMenu() {\n    var posX = $('#menu-layer').position().left;\n    var posY = $('#menu-layer').position().top;\n    this.menutx.fillStyle = \"#FF0000\";\n    this.menutx.fillRect(20, 20, 300, 300);\n\n  }\n\n  initialize() {\n    this.createScoreBoard();\n    this.initializeMenu();\n    let statObjs = this.stationaryObjects;\n    for (let y = 0; y < this.grid.length; y++) {\n      for (let x = 0; x < this.grid[0].length; x++) {\n        this.buildWalls(x, y);\n        this.createDots(x, y);\n        this.initializeNodes(x, y);\n        this.initializeCage(x, y);\n        this.initializeMovingObjects(x, y);\n      }\n    }\n\n    this.blocks.forEach(function(block) {\n      block.draw();\n    });\n    Object.keys(statObjs).forEach(function(key) {\n      var stationaryObject = statObjs[key];\n      stationaryObject.draw();\n    });\n\n\n\n  }\n\n\n}\n\nmodule.exports = Board;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/board.js\n// module id = 5\n// module chunks = 0","const Board = require('./board');\nconst MovingObject = require('./moving_objects/moving_object');\nconst Pacman = require('./moving_objects/pacman');\nconst Blinky = require('./moving_objects/blinky');\nconst Pinky = require('./moving_objects/pinky');\nconst Clyde = require('./moving_objects/clyde');\nconst Inky = require('./moving_objects/inky');\nconst StationaryObject = require('./stationary_objects/stationary_object');\nconst smallDot = require('./stationary_objects/small_dot');\nconst largeDot = require('./stationary_objects/large_dot');\n\nclass Game {\n\n  constructor(board, pacman, blinky, pinky, clyde, inky, playerScore) {\n    this.board = board;\n    this.pacman = pacman;\n    this.blinky = blinky;\n    this.pinky = pinky;\n    this.clyde = clyde;\n    this.inky = inky;\n    this.playerScore = playerScore;\n    this.movingObjects = [pacman, blinky, pinky, clyde, inky, playerScore];\n  }\n\n}\n\n\nmodule.exports = Game;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/game.js\n// module id = 6\n// module chunks = 0","\nclass GameView {\n  constructor(game, ctx, menutx) {\n    this.game = game;\n    this.ctx = ctx;\n    this.menutx = menutx;\n    this.gameStart = false;\n  }\n\n  bindKeyHandlers() {\n    var player = this.game.pacman;\n    var blinky = this.game.blinky;\n    var pinky = this.game.pinky;\n    var clyde = this.game.clyde;\n    Object.keys(GameView.MOVES).forEach((k) => {\n      let move = GameView.MOVES[k];\n      key(k, () => { player.changeDirection(move); });\n    });\n  }\n\n  start() {\n    var gameView = this;\n    var statObjs = this.game.stationaryObjects;\n\n\n    this.timerId = setInterval(\n\n        function () {\n          gameView.game.movingObjects.forEach(function(movingObject) {\n            movingObject.draw();\n          });\n\n        }, 1000 / 60\n    );\n\n    this.animationId = setInterval(\n      function() {\n        $.each(gameView.game.movingObjects, function(objectKey, object) {\n          if(object.moved) {\n            object.animationFrame += 1;\n          }\n        });\n      }, 1000 / 15\n    );\n    this.bindKeyHandlers();\n  }\n\n}\n\nGameView.MOVES = {\n  \"w\": [0, -2],\n  \"a\": [-2, 0],\n  \"s\": [0, 2],\n  \"d\": [1, 0],\n  \"up\": [0, -2],\n  \"down\": [0, 2],\n  \"left\": [-2, 0],\n  \"right\": [2, 0],\n};\n\nmodule.exports = GameView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/game_view.js\n// module id = 7\n// module chunks = 0","const MovingObject = require('./moving_object');\nconst Util = require('../util');\nconst BreadthFirstSearch = require('../breadth_first_search');\n\nclass Blinky extends MovingObject {\n  constructor(start_pos, pos, vel, sprites, board, blinkytx, gtx, dotstx) {\n    super(start_pos, pos, vel, sprites, board);\n    this.blinkytx = blinkytx;\n    this.gtx = gtx;\n    this.dotstx = dotstx;\n    this.moved = false;\n    this.animationFrame = 0;\n    this.avatar = this.spritesLocations.blinkyLeft[this.animationFrame % 2];\n    this.draw = this.draw.bind(this);\n    this.move = this.move.bind(this);\n    this.path = [];\n\n    this.frightened = false;\n    this.eaten = false;\n  }\n\n  draw() {\n\n    const blinkyImg = new Image();\n    blinkyImg.src = 'sprites/mspacman_sprites_2.png';\n\n    blinkyImg.onload = () => {\n      let dx = 20;\n      let dy = 20;\n\n      this.blinkytx.clearRect(0, 0, 1000, 1000);\n      this.move();\n\n      var sx = this.avatar[0];\n      var sy = this.avatar[1];\n      var destX = this.pos[0] - dx;\n      var destY = this.pos[1] - dy;\n      var sWidth = this.avatar[2];\n      var sHeight = this.avatar[3];\n      var destWidth = dx * 2;\n      var destHeight = dy * 2;\n      this.blinkytx.drawImage(blinkyImg, sx, sy, sWidth, sHeight, destX, destY, destWidth, destHeight);\n    };\n  }\n\n  move() {\n    var pacman = this.board.movingObjectsArr[4];\n    if (pacman && !pacman.moved) {\n      return;\n    }\n\n    if (pacman.respawning) {\n      return;\n    }\n\n    if (!this.moved) {\n      this.moved = true;\n    }\n\n    if(this.board.isOutOfBounds(this.pos)) {\n      this.warp();\n      this.pos[0] = this.pos[0] + this.vel[0];\n      this.pos[1] = this.pos[1] + this.vel[1];\n      return;\n    }\n\n    if (this.animationFrame === 350 || this.animationFrame % 350 < 245) {\n      this.chase();\n\n    } else {\n      this.scatter();\n    }\n\n  }\n\n  findPath(options) {\n    let dx = 20;\n    let dy = 20;\n    var pacman = this.board.movingObjectsArr[4];\n    var start = this.currentBlockPos(this.pos);\n\n    if (Util.equals((pacman.currentBlockPos(pacman.pos)), (this.currentBlockPos(this.pos)))) {\n      this.path = [this.currentBlockPos(this.pos)];\n      return;\n    }\n\n    var startNode = this.board.nodes['' + JSON.stringify(start)];\n    var dest = this.currentBlockPos(pacman.pos);\n\n    if (options && options.start) {\n      start = options.start;\n    }\n\n    if (options && options.offset) {\n      var dirX = Math.sign(pacman.vel[0]);\n      var dirY = Math.sign(pacman.vel[1]);\n      var offsetDest = [dest[0] + dirX + (options.offset * dx), dest[1] + (dirY * 2 * dx)];\n      if (this.board.nodes['' + JSON.stringify(offsetDest)]) {\n        dest = [dest[0] + (dirX * options.offset * dx), dest[1] + (dirY * 2 * dx)];\n      }\n    }\n\n    var newSearch = new BreadthFirstSearch(startNode, start, dest, this.board);\n    var parentNodes = newSearch.findParents();\n    this.path = newSearch.createPath(parentNodes, start, dest);\n    this.path.pop();\n  }\n\n  isReverseDir(signDx, signDy) {\n    var signVelX = Math.sign(this.vel[0]);\n    var signVelY = Math.sign(this.vel[1]);\n\n    if ((signVelX === 1 && signDx === -1) || (signVelX === -1 && signDx === 1) || (signVelY === 1 && signDy === -1) || (signVelY === -1 && signDy === 1)) {\n      return true;\n    }\n  }\n\n  bestNextMove(dest) {\n\n    var currentBlockPos = this.currentBlockPos(this.pos);\n    var currentNode = this.board.nodes['' + JSON.stringify(currentBlockPos)];\n    var bestNextNode = \"none\";\n    var smallestDistance = Infinity;\n\n    currentNode.neighbors.forEach( function(neighbor) {\n      var signDx = Math.sign(neighbor.pos[0] - this.pos[0]);\n      var signDy = Math.sign(neighbor.pos[1] - this.pos[1]);\n      if (this.isReverseDir(signDx, signDy)) {\n        return;\n      }\n\n      var currentDistance = Util.distance(neighbor.pos, dest);\n\n      if (currentDistance <= smallestDistance) {\n        bestNextNode = neighbor;\n        smallestDistance = currentDistance;\n      }\n    });\n\n    return bestNextNode.pos;\n  }\n\n  scatter() {\n    var currentBlockPos = this.currentBlockPos(this.pos);\n    var scatterDestPos = this.currentBlockPos([0,0]);\n\n    if ( this.board.intersections['' + JSON.stringify(this.pos)] || Util.equals(this.vel, [0,0] )) {\n      var currentNode = this.board.nodes['' + JSON.stringify(currentBlockPos)];\n      var betterNode = \"none\";\n      var smallestDistance = Infinity;\n\n      if (this.board.cageNodes['' + JSON.stringify(this.pos)]) {\n        currentNode = this.board.nodes['' + JSON.stringify(this.pos)];\n      }\n\n      currentNode.neighbors.forEach( function(neighbor) {\n        let dx = Math.sign(neighbor.pos[0] - this.pos[0]);\n        let dy = Math.sign(neighbor.pos[1] - this.pos[1]);\n        if(this.isReverseDir(dx, dy)) {\n          return;\n        }\n\n        let distance = Util.distance(neighbor.pos, scatterDestPos);\n        if (distance <= smallestDistance) {\n          betterNode = neighbor;\n          smallestDistance = distance;\n        }\n      }.bind(this));\n\n      this.vel = [Math.sign(betterNode.pos[0] - this.pos[0]) * 2, Math.sign(betterNode.pos[1] - this.pos[1]) * 2];\n    }\n\n    this.changeAvatar(Math.sign(this.vel[0]), Math.sign(this.vel[1]));\n    this.pos[0] = this.pos[0] + this.vel[0];\n    this.pos[1] = this.pos[1] + this.vel[1];\n\n  }\n\n\n\n  chase() {\n    var pacman = this.board.movingObjectsArr[4];\n    var pacmanCurrentBlock = pacman.currentBlockPos(pacman.pos);\n\n    var currentBlockPos = this.currentBlockPos(this.pos);\n    if(Util.equals(this.pos, pacmanCurrentBlock)) {\n\n      let nextMove = this.bestNextMove(pacman.pos);\n      this.vel = [Math.sign(nextMove[0] - this.pos[0]) * 2, Math.sign(nextMove[1] - this.pos[1]) * 2];\n      this.pos[0] = this.pos[0] + this.vel[0];\n      this.pos[1] = this.pos[1] + this.vel[1];\n      return;\n    }\n\n    if(this.board.intersections['' + JSON.stringify(this.pos)]) {\n      this.findPath();\n      var nextMove = this.path[this.path.length - 1];\n      var velXDir = Math.sign(nextMove[0] - this.pos[0]) * 2;\n      var velYDir = Math.sign(nextMove[1] - this.pos[1]) * 2;\n      this.vel = [velXDir, velYDir];\n    } else if (this.board.cageNodes['' + JSON.stringify(this.pos)]) {\n\n      this.findPath({ start: this.pos, offset: 1});\n      var nextMove = this.path[this.path.length - 1];\n      var velXDir = Math.sign(nextMove[0] - this.pos[0]) * 2;\n      var velYDir = Math.sign(nextMove[1] - this.pos[1]) * 2;\n      this.vel = [velXDir, velYDir];\n    }\n    this.changeAvatar(Math.sign(this.vel[0]), Math.sign(this.vel[1]));\n    this.pos[0] = this.pos[0] + this.vel[0];\n    this.pos[1] = this.pos[1] + this.vel[1];\n\n  }\n\n  changeAvatar(dx, dy) {\n    if (dx === 1) {\n      this.avatar = this.spritesLocations.blinkyRight[this.animationFrame % 2];\n    } else if (dx === -1) {\n      this.avatar = this.spritesLocations.blinkyLeft[this.animationFrame % 2];\n    } else if (dy === 1) {\n      this.avatar = this.spritesLocations.blinkyDown[this.animationFrame % 2];\n    } else if (dy === -1) {\n      this.avatar = this.spritesLocations.blinkyUp[this.animationFrame % 2];\n    }\n  }\n\n\n}\n\nmodule.exports = Blinky;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/moving_objects/blinky.js\n// module id = 8\n// module chunks = 0","const MovingObject = require('./moving_object');\nconst Util = require('../util');\nconst BreadthFirstSearch = require('../breadth_first_search');\n\nclass Clyde extends MovingObject {\n  constructor(start_pos, pos, vel, sprites, board, clydetx, gtx, dotstx) {\n    super(start_pos, pos, vel, sprites, board);\n    this.clydetx = clydetx;\n    this.gtx = gtx;\n    this.dotstx = dotstx;\n    this.moved = false;\n    this.animationFrame = 0;\n    this.avatar = this.spritesLocations.clydeLeft[this.animationFrame % 2];\n    this.draw = this.draw.bind(this);\n    this.move = this.move.bind(this);\n    this.path = [];\n\n    this.frightened = false;\n    this.eaten = false;\n  }\n\n  draw() {\n\n    const clydeImg = new Image();\n    clydeImg.src = 'sprites/mspacman_sprites_2.png';\n\n    clydeImg.onload = () => {\n      let dx = 20;\n      let dy = 20;\n\n      this.clydetx.clearRect(0, 0, 1000, 1000);\n      this.move();\n\n      var sx = this.avatar[0];\n      var sy = this.avatar[1];\n      var destX = this.pos[0] - dx;\n      var destY = this.pos[1] - dy;\n      var sWidth = this.avatar[2];\n      var sHeight = this.avatar[3];\n      var destWidth = dx * 2;\n      var destHeight = dy * 2;\n      this.clydetx.drawImage(clydeImg, sx, sy, sWidth, sHeight, destX, destY, destWidth, destHeight);\n    };\n  }\n\n  move() {\n    var pacman = this.board.movingObjectsArr[4];\n    var blinky = this.board.movingObjectsArr[0];\n\n    if (!blinky.moved || blinky.animationFrame < 108) {\n      return;\n    }\n\n    if (pacman.respawning) {\n      return;\n    }\n\n    if (!this.moved) {\n      this.moved = true;\n    }\n\n    if(this.board.isOutOfBounds(this.pos)) {\n      this.warp();\n      this.pos[0] = this.pos[0] + this.vel[0];\n      this.pos[1] = this.pos[1] + this.vel[1];\n      return;\n    }\n\n    if (this.animationFrame === 350 || this.animationFrame % 350 < 245) {\n      this.chase();\n\n    } else {\n      this.scatter();\n    }\n\n  }\n\n  findPath(options) {\n    let dx = 20;\n    let dy = 20;\n    var pacman = this.board.movingObjectsArr[0];\n    var start = this.currentBlockPos(this.pos);\n\n    if (Util.equals((pacman.currentBlockPos(pacman.pos)), (this.currentBlockPos(this.pos)))) {\n      this.path = [this.currentBlockPos(this.pos)];\n      return;\n    }\n\n\n    if (options && options.start) {\n      start = options.start;\n    }\n\n    var startNode = this.board.nodes['' + JSON.stringify(start)];\n\n    var dest;\n    var pacmanVelX = Math.sign(pacman.vel[0]);\n    var pacmanVelY = Math.sign(pacman.vel[1]);\n    var counter = 4;\n    dest = this.currentBlockPos([pacman.pos[0] - (pacmanVelX * dx * counter), pacman.pos[1] - (pacmanVelY * dx * counter)]);\n    while (!this.board.nodes['' + JSON.stringify(dest)]) {\n      counter -= 1;\n      dest = this.currentBlockPos([pacman.pos[0] - (pacmanVelX * dx * counter), pacman.pos[1] - (pacmanVelY * dx * counter)]);\n    }\n    var newSearch = new BreadthFirstSearch(startNode, start, dest, this.board);\n    var parentNodes = newSearch.findParents();\n    this.path = newSearch.createPath(parentNodes, start, dest);\n    this.path.pop();\n  }\n\n  isReverseDir(signDx, signDy) {\n    var signVelX = Math.sign(this.vel[0]);\n    var signVelY = Math.sign(this.vel[1]);\n\n    if ((signVelX === 1 && signDx === -1) || (signVelX === -1 && signDx === 1) || (signVelY === 1 && signDy === -1) || (signVelY === -1 && signDy === 1)) {\n      return true;\n    }\n  }\n\n  bestNextMove(dest) {\n\n    var currentBlockPos = this.currentBlockPos(this.pos);\n    var currentNode = this.board.nodes['' + JSON.stringify(currentBlockPos)];\n    var bestNextNode = \"none\";\n    var smallestDistance = Infinity;\n\n    currentNode.neighbors.forEach( function(neighbor) {\n      var signDx = Math.sign(neighbor.pos[0] - this.pos[0]);\n      var signDy = Math.sign(neighbor.pos[1] - this.pos[1]);\n      if (this.isReverseDir(signDx, signDy)) {\n        return;\n      }\n\n      var currentDistance = Util.distance(neighbor.pos, dest);\n\n      if (currentDistance <= smallestDistance) {\n        bestNextNode = neighbor;\n        smallestDistance = currentDistance;\n      }\n    });\n\n    return bestNextNode.pos;\n  }\n\n  scatter() {\n    var currentBlockPos = this.currentBlockPos(this.pos);\n    var scatterDestPos = this.currentBlockPos([560,720]);\n\n    if ( this.board.intersections['' + JSON.stringify(this.pos)] || Util.equals(this.vel, [0,0] )) {\n      var currentNode = this.board.nodes['' + JSON.stringify(currentBlockPos)];\n      var betterNode = \"none\";\n      var smallestDistance = Infinity;\n\n      if (this.board.cageNodes['' + JSON.stringify(this.pos)]) {\n        currentNode = this.board.nodes['' + JSON.stringify(this.pos)];\n      }\n\n      currentNode.neighbors.forEach( function(neighbor) {\n        let dx = Math.sign(neighbor.pos[0] - this.pos[0]);\n        let dy = Math.sign(neighbor.pos[1] - this.pos[1]);\n        if(this.isReverseDir(dx, dy)) {\n          return;\n        }\n\n        let distance = Util.distance(neighbor.pos, scatterDestPos);\n        if (distance <= smallestDistance) {\n          betterNode = neighbor;\n          smallestDistance = distance;\n        }\n      }.bind(this));\n\n      this.vel = [Math.sign(betterNode.pos[0] - this.pos[0]) * 2, Math.sign(betterNode.pos[1] - this.pos[1]) * 2];\n    }\n\n    this.changeAvatar(Math.sign(this.vel[0]), Math.sign(this.vel[1]));\n    this.pos[0] = this.pos[0] + this.vel[0];\n    this.pos[1] = this.pos[1] + this.vel[1];\n\n  }\n\n\n\n  chase() {\n    var pacman = this.board.movingObjectsArr[0];\n    var pacmanCurrentBlock = pacman.currentBlockPos(pacman.pos);\n\n    var currentBlockPos = this.currentBlockPos(this.pos);\n\n    if(this.board.intersections['' + JSON.stringify(this.pos)]) {\n      this.findPath();\n      var nextMove = this.path[this.path.length - 1];\n      var velXDir = Math.sign(nextMove[0] - this.pos[0]) * 2;\n      var velYDir = Math.sign(nextMove[1] - this.pos[1]) * 2;\n      this.vel = [velXDir, velYDir];\n    } else if (this.board.cageNodes['' + JSON.stringify(this.pos)]) {\n      this.findPath({ start: this.pos });\n      var nextMove = this.path[this.path.length - 1];\n      var velXDir = Math.sign(nextMove[0] - this.pos[0]) * 2;\n      var velYDir = Math.sign(nextMove[1] - this.pos[1]) * 2;\n      this.vel = [velXDir, velYDir];\n    }\n    this.changeAvatar(Math.sign(this.vel[0]), Math.sign(this.vel[1]));\n    this.pos[0] = this.pos[0] + this.vel[0];\n    this.pos[1] = this.pos[1] + this.vel[1];\n\n  }\n\n  changeAvatar(dx, dy) {\n    if (dx === 1) {\n      this.avatar = this.spritesLocations.clydeRight[this.animationFrame % 2];\n    } else if (dx === -1) {\n      this.avatar = this.spritesLocations.clydeLeft[this.animationFrame % 2];\n    } else if (dy === 1) {\n      this.avatar = this.spritesLocations.clydeDown[this.animationFrame % 2];\n    } else if (dy === -1) {\n      this.avatar = this.spritesLocations.clydeUp[this.animationFrame % 2];\n    }\n  }\n\n\n}\n\nmodule.exports = Clyde;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/moving_objects/clyde.js\n// module id = 9\n// module chunks = 0","const MovingObject = require('./moving_object');\nconst Game = require('../game');\nconst GameView = require('../game_view');\nconst Util = require('../util');\n\nclass Pacman extends MovingObject {\n\n  constructor(start_pos, pos, vel, sprites, board, ptx, gtx, dotstx) {\n    super(start_pos, pos, vel, sprites, board);\n    this.ptx = ptx;\n    this.gtx = gtx;\n    this.dotstx = dotstx;\n    this.moveQueue = [];\n    this.moved = false;\n    this.respawning = false;\n    this.animationFrame = 0;\n    this.avatar = this.spritesLocations.pacmanLeft[this.animationFrame % 4];\n    this.draw = this.draw.bind(this);\n  }\n\n  draw() {\n    const pacmanImg = new Image();\n    pacmanImg.src = 'sprites/mspacman_sprites_2.png';\n\n    pacmanImg.onload = () => {\n      let dx = 20;\n      let dy = 20;\n      this.move();\n      this.warp();\n\n      this.ptx.clearRect(0, 0, 1000, 1000);\n\n      var sx = this.avatar[0];\n      var sy = this.avatar[1];\n      var destX = this.pos[0] - dx;\n      var destY = this.pos[1] - dy;\n      var sWidth = this.avatar[2];\n      var sHeight = this.avatar[3];\n      var destWidth = dx * 2;\n      var destHeight = dy * 2;\n      this.ptx.drawImage(pacmanImg, sx, sy, sWidth, sHeight, destX, destY, destWidth, destHeight);\n    };\n  }\n\n\n  available_move(vel) {\n    let dx = 20;\n    let dy = 20;\n    var nextBlockPos;\n    var dir;\n\n    if(Math.sign(vel[0]) === -1) {\n      nextBlockPos = this.currentBlockPos([this.pos[0] - dx, this.pos[1]]);\n      dir = [-1, 0];\n    } else if (Math.sign(vel[0]) === 1) {\n      nextBlockPos = this.currentBlockPos([this.pos[0] + dx, this.pos[1]]);\n      dir = [1, 0];\n    } else if (Math.sign(vel[1]) === -1) {\n      nextBlockPos = this.currentBlockPos([this.pos[0], this.pos[1] - dy]);\n      dir = [0, -1];\n    } else if (Math.sign(vel[1]) === 1) {\n      nextBlockPos = this.currentBlockPos([this.pos[0], this.pos[1] + dy]);\n      dir = [0, 1];\n    } else {\n      nextBlockPos = this.pos;\n      dir = [0, 0];\n    }\n\n    nextBlockPos = JSON.stringify(nextBlockPos);\n\n    if (this.board.wallCollisions['' + nextBlockPos] === 1) {\n      var nextBlockPos = JSON.parse(nextBlockPos);\n      if(dir[0] === 1) {\n\n          if((nextBlockPos[0] - this.pos[0]) <= dx) {\n            this.vel[0] = 0;\n            return \"false\";\n          }\n\n      } else if (dir[0] === -1) {\n\n          if((this.pos[0] - nextBlockPos[0]) <= dx) {\n            this.vel[0] = 0;\n            return \"false\";\n          }\n\n      } else if (dir[1] === 1) {\n\n          if((nextBlockPos[1] - this.pos[1]) <= dy) {\n            this.vel[1] === 0;\n            return \"false\";\n          }\n\n      } else if (dir[1] === -1) {\n\n          if((this.pos[1] - nextBlockPos[1]) <= dy) {\n            this.vel[1] === 0;\n            return \"false\";\n          }\n      }\n\n    }\n\n    return true;\n  }\n\n  move() {\n\n    if (this.respawning) {\n      this.resetLevel();\n      return;\n    }\n    this.eatDot();\n    this.collideWithGhost();\n    if (this.board.intersections['' + JSON.stringify(this.pos)]) {\n      if (this.available_move(this.moveQueue[0]) !== 'false') {\n        this.vel[0] = this.moveQueue[0][0];\n        this.vel[1] = this.moveQueue[0][1];\n      } else if (this.available_move(this.vel) === 'false') {\n        this.vel[0] = 0;\n        this.vel[1] = 0;\n      }\n    }\n    this.changeAvatar(Math.sign(this.vel[0]), Math.sign(this.vel[1]));\n    this.pos[0] = this.pos[0] + this.vel[0];\n    this.pos[1] = this.pos[1] + this.vel[1];\n  }\n\n\n    is_turn(vel) {\n      if(this.vel[0] === 0 && this.vel[1] === 0) {\n        return false;\n      }\n\n      var current_dir = [Math.sign(this.vel[0]), Math.sign(this.vel[1])];\n      var new_dir =[Math.sign(vel[0]), Math.sign(vel[1])];\n      if (this.vel[0] === 0 && new_dir[1] === current_dir[1] * -1) {\n        return false;\n      }\n\n      if (this.vel[1] === 0 && new_dir[0] === current_dir[0] * -1) {\n        return false;\n      }\n\n      return true;\n    }\n\n    changeDirection(vel) {\n      this.moveQueue.pop();\n      this.moveQueue.push(vel);\n      this.moved = true;\n      if (this.available_move(vel) === \"false\") {\n        return;\n      }\n\n      if(!this.is_turn(vel)) {\n        this.vel[0] = vel[0];\n        this.vel[1] = vel[1];\n      }\n\n    }\n\n    eatDot() {\n      let dx = 20;\n      let dy = 20;\n      if (this.board.stationaryObjects[this.pos] && this.board.stationaryObjects[this.pos].constructor.name === \"SmallDot\") {\n        delete this.board.stationaryObjects[this.pos];\n        this.dotstx.clearRect(this.pos[0] - (dx / 2), this.pos[1] - (dy / 2), dx, dy);\n        this.board.scoreBoard.score += 10;\n      } else if (this.board.stationaryObjects[this.pos] && this.board.stationaryObjects[this.pos].constructor.name === \"LargeDot\") {\n        delete this.board.stationaryObjects[this.pos];\n        this.dotstx.clearRect(this.pos[0] - (dx / 2), this.pos[1] - (dy / 2), dx, dy);\n        this.board.stationaryObjects[[470, 230]].score += 50;\n      }\n    }\n\n    isCloseTo(endPos) {\n      let dx = 20;\n      let distance = Util.distance(this.pos, endPos);\n      return (distance < dx + 10) ? true : false;\n    }\n\n    collideWithGhost() {\n      let that = this;\n      $.each(this.board.movingObjectsArr, function(key, movingObject) {\n        if (movingObject.constructor.name === \"Blinky\" && that.isCloseTo(movingObject.pos)) {\n          that.respawning = true;\n        }\n\n        if (movingObject.constructor.name === \"Pinky\" && that.isCloseTo(movingObject.pos)) {\n          that.respawning = true;\n        }\n\n        if (movingObject.constructor.name === \"Inky\" && that.isCloseTo(movingObject.pos)) {\n          that.respawning = true;\n        }\n\n        if (movingObject.constructor.name === \"Clyde\" && that.isCloseTo(movingObject.pos)) {\n          that.respawning = true;\n        }\n      });\n    }\n\n    resetLevel() {\n      var start_pos = [281, 411];\n      this.pos = start_pos;\n      this.respawning = false;\n      this.vel = [0,0];\n      this.moved = false;\n      this.animationFrame = 0;\n      this.avatar = this.spritesLocations.pacmanLeft[this.animationFrame % 4];\n      $.each(this.board.movingObjectsArr, function(key, movingObject) {\n        if (movingObject.constructor.name === \"Blinky\") {\n          var start_pos = [281, 291];\n          movingObject.pos = start_pos;\n          movingObject.vel = [0, 0];\n          movingObject.animationFrame = 0;\n          movingObject.moved = false;\n          movingObject.avatar = this.spritesLocations.blinkyLeft[this.animationFrame % 2];\n        }\n\n        if (movingObject.constructor.name === \"Pinky\") {\n          var start_pos = [281, 351];\n          movingObject.pos = start_pos;\n          movingObject.vel = [0, 0];\n          movingObject.animationFrame = 0;\n          movingObject.moved = false;\n          movingObject.avatar = this.spritesLocations.pinkyLeft[this.animationFrame % 2];\n        }\n\n        if (movingObject.constructor.name === \"Inky\") {\n          var start_pos = [241, 351];\n          movingObject.pos = start_pos;\n          movingObject.vel = [0, 0];\n          movingObject.animationFrame = 0;\n          movingObject.moved = false;\n          movingObject.avatar = this.spritesLocations.inkyLeft[this.animationFrame % 2];\n        }\n\n        if (movingObject.constructor.name === \"Clyde\") {\n          var start_pos = [321, 351];\n          movingObject.pos = start_pos;\n          movingObject.vel = [0, 0];\n          movingObject.animationFrame = 0;\n          movingObject.moved = false;\n          movingObject.avatar = this.spritesLocations.clydeLeft[this.animationFrame % 2];\n        }\n      });\n\n    }\n\n    changeAvatar(dx, dy) {\n      if (dx === 1) {\n        this.avatar = this.spritesLocations.pacmanRight[this.animationFrame % 4];\n      } else if (dx === -1) {\n        this.avatar = this.spritesLocations.pacmanLeft[this.animationFrame % 4];\n      } else if (dy === 1) {\n        this.avatar = this.spritesLocations.pacmanDown[this.animationFrame % 4];\n      } else if (dy === -1) {\n        this.avatar = this.spritesLocations.pacmanUp[this.animationFrame % 4];\n      }\n    }\n\n  }\n\nmodule.exports = Pacman;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/moving_objects/pacman.js\n// module id = 10\n// module chunks = 0","const MovingObject = require('./moving_object');\nconst Util = require('../util');\nconst BreadthFirstSearch = require('../breadth_first_search');\n\nclass Pinky extends MovingObject {\n  constructor(start_pos, pos, vel, sprites, board, pinkytx, gtx, dotstx) {\n    super(start_pos, pos, vel, sprites, board);\n    this.pinkytx = pinkytx;\n    this.gtx = gtx;\n    this.dotstx = dotstx;\n    this.moved = false;\n    this.animationFrame = 0;\n    this.avatar = this.spritesLocations.pinkyLeft[this.animationFrame % 2];\n    this.draw = this.draw.bind(this);\n    this.move = this.move.bind(this);\n    this.path = [];\n\n    this.frightened = false;\n    this.eaten = false;\n  }\n\n  draw() {\n\n    const pinkyImg = new Image();\n    pinkyImg.src = 'sprites/mspacman_sprites_2.png';\n\n    pinkyImg.onload = () => {\n      let dx = 20;\n      let dy = 20;\n\n      this.pinkytx.clearRect(0, 0, 1000, 1000);\n      this.move();\n\n      var sx = this.avatar[0];\n      var sy = this.avatar[1];\n      var destX = this.pos[0] - dx;\n      var destY = this.pos[1] - dy;\n      var sWidth = this.avatar[2];\n      var sHeight = this.avatar[3];\n      var destWidth = dx * 2;\n      var destHeight = dy * 2;\n      this.pinkytx.drawImage(pinkyImg, sx, sy, sWidth, sHeight, destX, destY, destWidth, destHeight);\n    };\n  }\n\n  move() {\n    var pacman = this.board.movingObjectsArr[4];\n    var blinky = this.board.movingObjectsArr[0];\n\n    if (!blinky.moved || blinky.animationFrame < 28) {\n      return;\n    }\n\n    if (pacman.respawning) {\n      return;\n    }\n\n    if (!this.moved) {\n      this.moved = true;\n    }\n\n    if(this.board.isOutOfBounds(this.pos)) {\n      this.warp();\n      this.pos[0] = this.pos[0] + this.vel[0];\n      this.pos[1] = this.pos[1] + this.vel[1];\n      return;\n    }\n\n    if (this.animationFrame === 350 || this.animationFrame % 350 < 245) {\n      this.chase();\n\n    } else {\n      this.scatter();\n    }\n\n  }\n\n  findPath(options) {\n    let dx = 20;\n    let dy = 20;\n    var pacman = this.board.movingObjectsArr[4];\n    var start = this.currentBlockPos(this.pos);\n\n    if (Util.equals((pacman.currentBlockPos(pacman.pos)), (this.currentBlockPos(this.pos)))) {\n      this.path = [this.currentBlockPos(this.pos)];\n      return;\n    }\n\n\n    if (options && options.start) {\n      start = options.start;\n    }\n\n    var startNode = this.board.nodes['' + JSON.stringify(start)];\n\n    var dest;\n    var pacmanVelX = Math.sign(pacman.vel[0]);\n    var pacmanVelY = Math.sign(pacman.vel[1]);\n    var counter = 4;\n    dest = this.currentBlockPos([pacman.pos[0] + (pacmanVelX * dx * counter), pacman.pos[1] + (pacmanVelY * dx * counter)]);\n    while (!this.board.nodes['' + JSON.stringify(dest)]) {\n      counter -= 1;\n      dest = this.currentBlockPos([pacman.pos[0] + (pacmanVelX * dx * counter), pacman.pos[1] + (pacmanVelY * dx * counter)]);\n    }\n    var newSearch = new BreadthFirstSearch(startNode, start, dest, this.board);\n    var parentNodes = newSearch.findParents();\n    this.path = newSearch.createPath(parentNodes, start, dest);\n    this.path.pop();\n  }\n\n  isReverseDir(signDx, signDy) {\n    var signVelX = Math.sign(this.vel[0]);\n    var signVelY = Math.sign(this.vel[1]);\n\n    if ((signVelX === 1 && signDx === -1) || (signVelX === -1 && signDx === 1) || (signVelY === 1 && signDy === -1) || (signVelY === -1 && signDy === 1)) {\n      return true;\n    }\n  }\n\n  bestNextMove(dest) {\n\n    var currentBlockPos = this.currentBlockPos(this.pos);\n    var currentNode = this.board.nodes['' + JSON.stringify(currentBlockPos)];\n    var bestNextNode = \"none\";\n    var smallestDistance = Infinity;\n\n    currentNode.neighbors.forEach( function(neighbor) {\n      var signDx = Math.sign(neighbor.pos[0] - this.pos[0]);\n      var signDy = Math.sign(neighbor.pos[1] - this.pos[1]);\n      if (this.isReverseDir(signDx, signDy)) {\n        return;\n      }\n\n      var currentDistance = Util.distance(neighbor.pos, dest);\n\n      if (currentDistance <= smallestDistance) {\n        bestNextNode = neighbor;\n        smallestDistance = currentDistance;\n      }\n    });\n\n    return bestNextNode.pos;\n  }\n\n  scatter() {\n    var currentBlockPos = this.currentBlockPos(this.pos);\n    var scatterDestPos = this.currentBlockPos([560,0]);\n\n    if ( this.board.intersections['' + JSON.stringify(this.pos)] || Util.equals(this.vel, [0,0] )) {\n      var currentNode = this.board.nodes['' + JSON.stringify(currentBlockPos)];\n      var betterNode = \"none\";\n      var smallestDistance = Infinity;\n\n      if (this.board.cageNodes['' + JSON.stringify(this.pos)]) {\n        currentNode = this.board.nodes['' + JSON.stringify(this.pos)];\n      }\n\n      currentNode.neighbors.forEach( function(neighbor) {\n        let dx = Math.sign(neighbor.pos[0] - this.pos[0]);\n        let dy = Math.sign(neighbor.pos[1] - this.pos[1]);\n        if(this.isReverseDir(dx, dy)) {\n          return;\n        }\n\n        let distance = Util.distance(neighbor.pos, scatterDestPos);\n        if (distance <= smallestDistance) {\n          betterNode = neighbor;\n          smallestDistance = distance;\n        }\n      }.bind(this));\n\n      this.vel = [Math.sign(betterNode.pos[0] - this.pos[0]) * 2, Math.sign(betterNode.pos[1] - this.pos[1]) * 2];\n    }\n\n    this.changeAvatar(Math.sign(this.vel[0]), Math.sign(this.vel[1]));\n    this.pos[0] = this.pos[0] + this.vel[0];\n    this.pos[1] = this.pos[1] + this.vel[1];\n\n  }\n\n\n\n  chase() {\n    var pacman = this.board.movingObjectsArr[4];\n    var pacmanCurrentBlock = pacman.currentBlockPos(pacman.pos);\n\n    var currentBlockPos = this.currentBlockPos(this.pos);\n\n    if(this.board.intersections['' + JSON.stringify(this.pos)]) {\n      this.findPath();\n      var nextMove = this.path[this.path.length - 1];\n      var velXDir = Math.sign(nextMove[0] - this.pos[0]) * 2;\n      var velYDir = Math.sign(nextMove[1] - this.pos[1]) * 2;\n      this.vel = [velXDir, velYDir];\n    } else if (this.board.cageNodes['' + JSON.stringify(this.pos)]) {\n      this.findPath({ start: this.pos });\n      var nextMove = this.path[this.path.length - 1];\n      var velXDir = Math.sign(nextMove[0] - this.pos[0]) * 2;\n      var velYDir = Math.sign(nextMove[1] - this.pos[1]) * 2;\n      this.vel = [velXDir, velYDir];\n    }\n    this.changeAvatar(Math.sign(this.vel[0]), Math.sign(this.vel[1]));\n    this.pos[0] = this.pos[0] + this.vel[0];\n    this.pos[1] = this.pos[1] + this.vel[1];\n\n  }\n\n  changeAvatar(dx, dy) {\n    if (dx === 1) {\n      this.avatar = this.spritesLocations.pinkyRight[this.animationFrame % 2];\n    } else if (dx === -1) {\n      this.avatar = this.spritesLocations.pinkyLeft[this.animationFrame % 2];\n    } else if (dy === 1) {\n      this.avatar = this.spritesLocations.pinkyDown[this.animationFrame % 2];\n    } else if (dy === -1) {\n      this.avatar = this.spritesLocations.pinkyUp[this.animationFrame % 2];\n    }\n  }\n\n\n}\n\nmodule.exports = Pinky;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/moving_objects/pinky.js\n// module id = 11\n// module chunks = 0","\nclass Node {\n  constructor(pos) {\n    this.neighbors = [];\n    this.pos = pos;\n  }\n\n  addNeighbor(node) {\n    this.neighbors.push(node);\n  }\n}\n\nmodule.exports = Node;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/node.js\n// module id = 12\n// module chunks = 0","const StationaryObject = require('./stationary_object');\n\nclass LargeDot extends StationaryObject {\n  constructor(pos, sprites, dotstx) {\n    super(pos, sprites, dotstx);\n    this.avatar = this.spritesLocations['largeDot'];\n  }\n\n  draw() {\n    const largeDotImg = new Image();\n    largeDotImg.src = 'sprites/mspacman_sprites_2.png';\n    largeDotImg.onload = () => {\n      let dx = 20;\n      let dy = 20;\n\n      var sx = this.avatar[0];\n      var sy = this.avatar[1];\n      var destX = this.pos[0] - (dx / 2);\n      var destY = this.pos[1] - (dy / 2);\n      var sWidth = this.avatar[2];\n      var sHeight = this.avatar[3];\n      var destWidth = dx;\n      var destHeight = dy;\n\n      this.dotstx.clearRect(destX, destY, destWidth, destHeight);\n      this.dotstx.drawImage(largeDotImg, sx, sy, sWidth, sHeight, destX, destY, destWidth, destHeight);\n    };\n  }\n}\n\nmodule.exports = LargeDot;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/stationary_objects/large_dot.js\n// module id = 13\n// module chunks = 0","const StationaryObject = require('./stationary_object');\n\nclass SmallDot extends StationaryObject {\n  constructor(pos, sprites, dotstx) {\n    super(pos, sprites, dotstx);\n    this.avatar = this.spritesLocations['smallDot'];\n  }\n\n  draw() {\n    const smallDotImg = new Image();\n    smallDotImg.src = 'sprites/mspacman_sprites_2.png';\n    smallDotImg.onload = () => {\n      let dx = 20;\n      let dy = 20;\n\n      var sx = this.avatar[0];\n      var sy = this.avatar[1];\n      var destX = this.pos[0] - (dx / 4);\n      var destY = this.pos[1] - (dy / 4);\n      var sWidth = this.avatar[2];\n      var sHeight = this.avatar[3];\n      var destWidth = dx / 2;\n      var destHeight = dy / 2;\n\n      this.dotstx.clearRect(destX, destY, destWidth, destHeight);\n      this.dotstx.drawImage(smallDotImg, sx, sy, sWidth, sHeight, destX, destY, destWidth, destHeight);\n    };\n  }\n}\n\nmodule.exports = SmallDot;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/stationary_objects/small_dot.js\n// module id = 14\n// module chunks = 0","\nclass Grids {\n\tconstructor() {\n\t\tthis.LEVEL_ONE_GRID =\n\t\t[\n\t\t[97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97],\n\t\t[97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97],\n\t\t[97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97],\n\t\t[5, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 6],\n\t\t[1, 96, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 96, -1],\n\t\t[1, 0, 7, 9, 9, 8, 0, 7, 9, 9, 9, 8, 0, 10, 10, 0, 7, 9, 9, 9, 8, 0, 7, 9, 9, 8, 0, -1],\n\t\t[1, 0, 10, 98, 98, 10, 0, 10, 98, 98, 98, 10, 0, 10, 10, 0, 10, 98, 98, 98, 10, 0, 10, 98, 98, 10, 0, -1],\n\t\t[1, 0, -7, 9, 9, -8, 0, -7, 9, 9, 9, -8, 0, -7, -8, 0, -7, 9, 9, 9, -8, 0, -7, 9, 9, -8, 0, -1],\n\t\t[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1],\n\t\t[1, 0, 7, 9, 9, 8, 0, 7, 8, 0, 7, 9, 9, 9, 9, 9, 9, 8, 0, 7, 8, 0, 7, 9, 9, 8, 0, -1],\n\t\t[1, 0, -7, 9, 9, -8, 0, 10, 10, 0, -7, 9, 9, 8, 7, 9, 9, -8, 0, 10, 10, 0, -7, 9, 9, -8, 0, -1],\n\t\t[1, 0, 0, 0, 0, 0, 0, 10, 10, 0, 0, 0, 0, 10, 10, 0, 0, 0, 0, 10, 10, 0, 0, 0, 0, 0, 0, -1],\n\t\t[-5, -2, -2, -2, -2, 8, 0, 10, -7, 9, 9, 8, 97, 10, 10, 97, 7, 9, 9, -8, 10, 0, 7, -2, -2, -2, -2, -6],\n\t\t[98, 98, 98, 98, 98, 1, 0, 10, 7, 9, 9, -8, 97, -7, -8, 97, -7, 9, 9, 8, 10, 0, -1, 98, 98, 98, 98, 98],\n\t\t[98, 98, 98, 98, 98, 1, 0, 10, 10, 97, 97, 97, 97, \"B\", \"C\", 97, 97, 97, 97, 10, 10, 0, -1, 98, 98, 98, 98, 98],\n\t\t[98, 98, 98, 98, 98, 1, 0, 10, 10, 97, 7, -2, -2, \"C\", \"C\", -2, -2, 8, 97, 10, 10, 0, -1, 98, 98, 98, 98, 98],\n\t\t[2, 2, 2, 2, 2, -8, 0, -7, -8, 97, -1, 99, 99, \"C\", \"C\", 99, 99, 1, 97, -7, -8, 0, -7, 2, 2, 2, 2, 2],\n\t\t[97, 97, 97, 97, 97, 97, 0, 97, 97, 97, -1, \"I\", 97, \"E\", \"C\", \"N\", 97, 1, 97, 97, 97, 0, 97, 97, 97, 97, 97, 97],\n\t\t[-2, -2, -2, -2, -2, 8, 0, 7, 8, 97, -1, 99, 99, 99, 99, 99, 99, 1, 97, 7, 8, 0, 7, -2, -2, -2, -2, -2],\n\t\t[98, 98, 98, 98, 98, 1, 0, 10, 10, 97, -7, 2, 2, 2, 2, 2, 2, -8, 97, 10, 10, 0, -1, 98, 98, 98, 98, 98],\n\t\t[98, 98, 98, 98, 98, 1, 0, 10, 10, 97, 97, 97, 97, \"P\", 97, 97, 97, 97, 97, 10, 10, 0, -1, 98, 98, 98, 98, 98],\n\t\t[98, 98, 98, 98, 98, 1, 0, 10, 10, 97, 7, 9, 9, 9, 9, 9, 9, 8, 97, 10, 10, 0, -1,98, 98, 98, 98, 98],\n\t\t[5, 2, 2, 2, 2, -8, 0, -7, -8, 97, -7, 9, 9, 8, 7, 9, 9, -8, 97, -7, -8, 0, -7, 2, 2, 2, 2, 6],\n\t\t[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1],\n\t\t[1, 0, 7, 9, 9, 8, 0, 7, 9, 9, 9, 8, 0, 10, 10, 0, 7, 9, 9, 9, 8, 0, 7, 9, 9, 8, 0, -1],\n\t\t[1, 0, -7, 9, 8, 10, 0, -7, 9, 9, 9, -8, 0, -7, -8, 0, -7, 9, 9, 9, -8, 0, 10, 7, 9, -8, 0, -1],\n\t\t[1, 0, 0, 0, 10, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 10, 0, 0, 0, -1],\n\t\t[11, 9, 8, 0, 10, 10, 0, 7, 8, 0, 7, 9, 9, 9, 9, 9, 9, 8, 0, 7, 8, 0, 10, 10, 0, 7, 9, 13],\n\t\t[12, 9, -8, 0, -7, -8, 0, 10, 10, 0, -7, 9, 9, 8, 7, 9, 9, -8, 0, 10, 10, 0, -7, -8, 0, -7, 9, 14],\n\t\t[1, 0, 0, 0, 0, 0, 0, 10, 10, 0, 0, 0, 0, 10, 10, 0, 0, 0, 0, 10, 10, 0, 0, 0, 0, 0, 0, -1],\n\t\t[1, 0, 7, 9, 9, 9, 9, -8, -7, 9, 9, 8, 0, 10, 10, 0, 7, 9, 9, -8, -7, 9, 9, 9, 9, 8, 0, -1],\n\t\t[1, 0, -7, 9, 9, 9, 9, 9, 9, 9, 9, -8, 0, -7, -8, 0, -7, 9, 9, 9, 9, 9, 9, 9, 9, -8, 0, -1],\n\t\t[1, 96, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 96, -1],\n\t\t[-5, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -6],\n\t\t[97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97],\n\t\t[97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97],\n\t];\n}\n}\n\nmodule.exports = Grids;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/grids.js\n// module id = 15\n// module chunks = 0","const Block = require(\"./block\");\n\nclass HorizontalBorderSingle extends Block {\n\n  draw() {\n    this.ctx.beginPath();\n    this.ctx.moveTo(this.posX, this.posY + (this.height / 2));\n    this.ctx.lineTo(this.posX + this.width, this.posY + (this.height / 2));\n    this.ctx.stroke();\n  }\n}\n\nmodule.exports = HorizontalBorderSingle;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/blocks/horizontal_border_single.js\n// module id = 16\n// module chunks = 0","const Block = require(\"./block\");\n\nclass LeftLowerConnector extends Block {\n\n  draw() {\n    this.ctx.beginPath();\n    this.ctx.moveTo(this.posX, this.posY);\n    this.ctx.lineTo(this.posX, this.posY + this.height);\n    this.ctx.moveTo(this.posX + (this.width / 2), this.posY + this.height);\n    this.ctx.arc(this.posX + this.width, this.posY + this.height, (this.width / 2), 1*Math.PI, 1.5*Math.PI, false);\n    this.ctx.stroke();\n  }\n}\n\nmodule.exports = LeftLowerConnector;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/blocks/left_lower_connector.js\n// module id = 17\n// module chunks = 0","const Block = require(\"./block\");\n\nclass LeftUpperConnector extends Block {\n\n  draw() {\n    this.ctx.beginPath();\n    this.ctx.moveTo(this.posX, this.posY);\n    this.ctx.lineTo(this.posX, this.posY + this.height);\n    this.ctx.moveTo(this.posX + (this.width / 2), this.posY);\n    this.ctx.arc(this.posX + this.width, this.posY, (this.width / 2), 1*Math.PI, 0.5*Math.PI, true);\n    this.ctx.stroke();\n  }\n}\n\nmodule.exports = LeftUpperConnector;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/blocks/left_upper_connector.js\n// module id = 18\n// module chunks = 0","const Block = require(\"./block\");\n\nclass LeftVerticalBorder extends Block {\n\n  draw() {\n    this.ctx.beginPath();\n    this.ctx.moveTo(this.posX, this.posY);\n    this.ctx.lineTo(this.posX, this.posY + this.height);\n    this.ctx.moveTo(this.posX + (this.width / 2), this.posY);\n    this.ctx.lineTo(this.posX + (this.width / 2), this.posY + this.height);\n    this.ctx.stroke();\n  }\n}\n\nmodule.exports = LeftVerticalBorder;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/blocks/left_vertical_border.js\n// module id = 19\n// module chunks = 0","const Block = require(\"./block\");\n\nclass LowerHorizontalBorder extends Block {\n  \n  draw() {\n    this.ctx.beginPath();\n    this.ctx.moveTo(this.posX, this.posY + this.height);\n    this.ctx.lineTo(this.posX + this.width, this.posY + this.height);\n    this.ctx.moveTo(this.posX, this.posY + (this.height / 2));\n    this.ctx.lineTo(this.posX + this.width, this.posY + (this.height / 2));\n    this.ctx.stroke();\n  }\n}\n\nmodule.exports = LowerHorizontalBorder;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/blocks/lower_horizontal_border.js\n// module id = 20\n// module chunks = 0","const Block = require(\"./block\");\n\nclass LowerLeftConnector extends Block {\n\n  draw() {\n    this.ctx.beginPath();\n    this.ctx.moveTo(this.posX, this.posY + this.height);\n    this.ctx.lineTo(this.posX + this.width, this.posY + this.height);\n    this.ctx.moveTo(this.posX + (this.width / 2), this.posY);\n    this.ctx.arc(this.posX, this.posY, (this.width / 2), 0, 0.5*Math.PI, false);\n    this.ctx.stroke();\n  }\n}\n\nmodule.exports = LowerLeftConnector;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/blocks/lower_left_connector.js\n// module id = 21\n// module chunks = 0","const Block = require(\"./block\");\n\nclass LowerLeftCorner extends Block {\n\n  draw() {\n    this.ctx.beginPath();\n    this.ctx.arc(this.posX + this.width, this.posY, this.width, 1*Math.PI, 0.5*Math.PI, true);\n    this.ctx.moveTo(this.posX + (this.width / 2), this.posY);\n    this.ctx.arc(this.posX + this.width, this.posY, (this.width / 2), 1*Math.PI, 0.5*Math.PI, true);\n    this.ctx.stroke();\n  }\n}\n\nmodule.exports = LowerLeftCorner;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/blocks/lower_left_corner.js\n// module id = 22\n// module chunks = 0","const Block = require(\"./block\");\n\nclass LowerLeftCornerSingle extends Block {\n\n  draw() {\n    this.ctx.beginPath();\n    this.ctx.moveTo(this.posX + this.width, this.posY + (this.height / 2));\n    this.ctx.arc(this.posX + this.width, this.posY, (this.width / 2), 0.5*Math.PI, 1*Math.PI, false);\n    this.ctx.stroke();\n  }\n}\n\nmodule.exports = LowerLeftCornerSingle;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/blocks/lower_left_corner_single.js\n// module id = 23\n// module chunks = 0","const Block = require(\"./block\");\n\nclass LowerRightConnector extends Block {\n  \n  draw() {\n    this.ctx.beginPath();\n    this.ctx.moveTo(this.posX, this.posY + this.height);\n    this.ctx.lineTo(this.posX + this.width, this.posY + this.height);\n    this.ctx.moveTo(this.posX + this.width, this.posY + (this.height / 2));\n    this.ctx.arc(this.posX + this.width, this.posY, (this.width / 2), 0.5*Math.PI, 1*Math.PI, false);\n    this.ctx.stroke();\n  }\n}\n\nmodule.exports = LowerRightConnector;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/blocks/lower_right_connector.js\n// module id = 24\n// module chunks = 0","const Block = require(\"./block\");\n\nclass LowerRightCorner extends Block {\n\n  draw() {\n    this.ctx.beginPath();\n    this.ctx.arc(this.posX, this.posY, this.width, 0, 0.5*Math.PI, false);\n    this.ctx.moveTo(this.posX + (this.width / 2), this.posY);\n    this.ctx.arc(this.posX, this.posY, (this.width / 2), 0, 0.5*Math.PI, false);\n    this.ctx.stroke();\n  }\n}\n\nmodule.exports = LowerRightCorner;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/blocks/lower_right_corner.js\n// module id = 25\n// module chunks = 0","const Block = require(\"./block\");\n\nclass LowerRightCornerSingle extends Block {\n\n  draw() {\n    this.ctx.beginPath();\n    this.ctx.moveTo(this.posX + (this.width / 2), this.posY);\n    this.ctx.arc(this.posX, this.posY, (this.width / 2), 0, 0.5*Math.PI, false);\n    this.ctx.stroke();\n  }\n}\n\nmodule.exports = LowerRightCornerSingle;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/blocks/lower_right_corner_single.js\n// module id = 26\n// module chunks = 0","const Block = require(\"./block\");\n\nclass RightLowerConnector extends Block {\n\n  draw() {\n    this.ctx.beginPath();\n    this.ctx.moveTo(this.posX + this.width, this.posY);\n    this.ctx.lineTo(this.posX + this.width, this.posY + this.height);\n    this.ctx.moveTo(this.posX, this.posY + (this.height / 2));\n    this.ctx.arc(this.posX, this.posY + this.height, (this.width / 2), 1.5*Math.PI, 0, false);\n    this.ctx.stroke();\n  }\n}\n\nmodule.exports = RightLowerConnector;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/blocks/right_lower_connector.js\n// module id = 27\n// module chunks = 0","const Block = require(\"./block\");\n\nclass RightUpperConnector extends Block {\n\n  draw() {\n    this.ctx.beginPath();\n    this.ctx.moveTo(this.posX + this.width, this.posY);\n    this.ctx.lineTo(this.posX + this.width, this.posY + this.height);\n    this.ctx.moveTo(this.posX + (this.width / 2), this.posY);\n    this.ctx.arc(this.posX, this.posY, (this.width / 2), 0, 0.5*Math.PI, false);\n    this.ctx.stroke();\n  }\n}\n\nmodule.exports = RightUpperConnector;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/blocks/right_upper_connector.js\n// module id = 28\n// module chunks = 0","const Block = require(\"./block\");\n\nclass RightVerticalBorder extends Block {\n\n  draw() {\n    this.ctx.beginPath();\n    this.ctx.moveTo(this.posX + this.width, this.posY);\n    this.ctx.lineTo(this.posX + this.width, this.posY + this.height);\n    this.ctx.moveTo(this.posX + (this.width / 2), this.posY);\n    this.ctx.lineTo(this.posX + (this.width / 2), this.posY + this.height);\n    this.ctx.stroke();\n  }\n}\n\nmodule.exports = RightVerticalBorder;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/blocks/right_vertical_border.js\n// module id = 29\n// module chunks = 0","const Block = require(\"./block\");\n\nclass UpperHorizontalBorder extends Block {\n\n  draw() {\n    this.ctx.beginPath();\n    this.ctx.moveTo(this.posX, this.posY);\n    this.ctx.lineTo(this.posX + this.width, this.posY);\n    this.ctx.moveTo(this.posX, this.posY + (this.height / 2));\n    this.ctx.lineTo(this.posX + this.width, this.posY + (this.height / 2));\n    this.ctx.stroke();\n  }\n}\n\nmodule.exports = UpperHorizontalBorder;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/blocks/upper_horizontal_border.js\n// module id = 30\n// module chunks = 0","const Block = require(\"./block\");\n\nclass UpperLeftConnector extends Block {\n\n  draw() {\n    this.ctx.beginPath();\n    this.ctx.moveTo(this.posX, this.posY);\n    this.ctx.lineTo(this.posX + this.width, this.posY);\n    this.ctx.moveTo(this.posX, this.posY + (this.height / 2));\n    this.ctx.arc(this.posX, this.posY + this.height, (this.width / 2), 1.5*Math.PI, 0, false);\n    this.ctx.stroke();\n  }\n}\n\nmodule.exports = UpperLeftConnector;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/blocks/upper_left_connector.js\n// module id = 31\n// module chunks = 0","const Block = require(\"./block\");\n\nclass UpperLeftCorner extends Block {\n\n\n  draw() {\n    this.ctx.beginPath();\n    this.ctx.arc(this.posX + this.width, this.posY + this.height, this.width, 1.5*Math.PI, 1*Math.PI, true);\n    this.ctx.moveTo(this.posX + this.width, this.posY + (this.height / 2));\n    this.ctx.arc(this.posX + this.width, this.posY + this.height, (this.width / 2), 1.5*Math.PI, 1*Math.PI, true);\n    this.ctx.stroke();\n  }\n}\n\nmodule.exports = UpperLeftCorner;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/blocks/upper_left_corner.js\n// module id = 32\n// module chunks = 0","const Block = require(\"./block\");\n\nclass UpperLeftCornerSingle extends Block {\n\n  draw() {\n    this.ctx.beginPath();\n    this.ctx.moveTo(this.posX + (this.width / 2), this.posY + this.height);\n    this.ctx.arc(this.posX + this.width, this.posY + this.height, (this.width / 2), 1*Math.PI, 1.5*Math.PI, false);\n    this.ctx.stroke();\n  }\n}\n\nmodule.exports = UpperLeftCornerSingle;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/blocks/upper_left_corner_single.js\n// module id = 33\n// module chunks = 0","const Block = require(\"./block\");\n\nclass UpperRightConnector extends Block {\n  \n  draw() {\n    this.ctx.beginPath();\n    this.ctx.moveTo(this.posX, this.posY);\n    this.ctx.lineTo(this.posX + this.width, this.posY);\n    this.ctx.moveTo(this.posX + this.width, this.posY + (this.height / 2));\n    this.ctx.arc(this.posX + this.width, this.posY + this.height, (this.width / 2), 1.5*Math.PI, 1*Math.PI, true);\n    this.ctx.stroke();\n  }\n}\n\nmodule.exports = UpperRightConnector;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/blocks/upper_right_connector.js\n// module id = 34\n// module chunks = 0","const Block = require(\"./block\");\n\nclass UpperRightCorner extends Block {\n\n  draw() {\n    this.ctx.beginPath();\n    this.ctx.arc(this.posX, this.posY + this.height, this.width, 1.5*Math.PI, 0, false);\n    this.ctx.moveTo(this.posX, this.posY + (this.height / 2));\n    this.ctx.arc(this.posX, this.posY + this.height, (this.width / 2), 1.5*Math.PI, 0, false);\n    this.ctx.stroke();\n  }\n}\n\nmodule.exports = UpperRightCorner;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/blocks/upper_right_corner.js\n// module id = 35\n// module chunks = 0","const Block = require(\"./block\");\n\nclass UpperRightCornerSingle extends Block {\n\n  draw() {\n    this.ctx.beginPath();\n    this.ctx.moveTo(this.posX, this.posY + (this.height / 2));\n    this.ctx.arc(this.posX, this.posY + this.height, (this.width / 2), 1.5*Math.PI, 0, false);\n    this.ctx.stroke();\n  }\n}\n\nmodule.exports = UpperRightCornerSingle;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/blocks/upper_right_corner_single.js\n// module id = 36\n// module chunks = 0","const Block = require(\"./block\");\n\nclass VerticalBorderSingle extends Block {\n  \n  draw() {\n    this.ctx.beginPath();\n    this.ctx.moveTo(this.posX + (this.width / 2), this.posY);\n    this.ctx.lineTo(this.posX + (this.width / 2), this.posY + this.height);\n    this.ctx.stroke();\n  }\n}\n\nmodule.exports = VerticalBorderSingle;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/blocks/vertical_border_single.js\n// module id = 37\n// module chunks = 0","const MovingObject = require('./moving_object');\nconst Util = require('../util');\nconst BreadthFirstSearch = require('../breadth_first_search');\n\nclass Inky extends MovingObject {\n  constructor(start_pos, pos, vel, sprites, board, inkytx, gtx, dotstx) {\n    super(start_pos, pos, vel, sprites, board);\n    this.inkytx = inkytx;\n    this.gtx = gtx;\n    this.dotstx = dotstx;\n    this.moved = false;\n    this.animationFrame = 0;\n    this.avatar = this.spritesLocations.inkyLeft[this.animationFrame % 2];\n    this.draw = this.draw.bind(this);\n    this.move = this.move.bind(this);\n    this.path = [];\n\n    this.frightened = false;\n    this.eaten = false;\n  }\n\n  draw() {\n\n    const inkyImg = new Image();\n    inkyImg.src = 'sprites/mspacman_sprites_2.png';\n\n    inkyImg.onload = () => {\n      let dx = 20;\n      let dy = 20;\n\n      this.inkytx.clearRect(0, 0, 1000, 1000);\n      this.move();\n\n      var sx = this.avatar[0];\n      var sy = this.avatar[1];\n      var destX = this.pos[0] - dx;\n      var destY = this.pos[1] - dy;\n      var sWidth = this.avatar[2];\n      var sHeight = this.avatar[3];\n      var destWidth = dx * 2;\n      var destHeight = dy * 2;\n      this.inkytx.drawImage(inkyImg, sx, sy, sWidth, sHeight, destX, destY, destWidth, destHeight);\n    };\n  }\n\n  move() {\n    var pacman = this.board.movingObjectsArr[4];\n    var blinky = this.board.movingObjectsArr[0];\n\n    if (!blinky.moved || blinky.animationFrame < 64) {\n      return;\n    }\n\n    if (pacman.respawning) {\n      return;\n    }\n\n    if (!this.moved) {\n      this.moved = true;\n    }\n\n    if(this.board.isOutOfBounds(this.pos)) {\n      this.warp();\n      this.pos[0] = this.pos[0] + this.vel[0];\n      this.pos[1] = this.pos[1] + this.vel[1];\n      return;\n    }\n\n    if (this.animationFrame === 350 || this.animationFrame % 350 < 245) {\n      this.chase();\n\n    } else {\n      this.scatter();\n    }\n\n  }\n\n  findPath(options) {\n    let dx = 20;\n    let dy = 20;\n    var pacman = this.board.movingObjectsArr[4];\n    var start = this.currentBlockPos(this.pos);\n\n    if (Util.equals((pacman.currentBlockPos(pacman.pos)), (this.currentBlockPos(this.pos)))) {\n      this.path = [this.currentBlockPos(this.pos)];\n      return;\n    }\n\n\n    if (options && options.start) {\n      start = options.start;\n    }\n\n    var startNode = this.board.nodes['' + JSON.stringify(start)];\n    var dest = this.currentBlockPos(pacman.pos);\n\n    if (options && options.offset) {\n      var dirX = Math.sign(pacman.vel[0]);\n      var dirY = Math.sign(pacman.vel[1]);\n      var offsetDest = [dest[0] + dirX + (options.offset * dx), dest[1] + (dirY * 2 * dx)];\n      if (this.board.nodes['' + JSON.stringify(offsetDest)]) {\n        dest = [dest[0] + (dirX * options.offset * dx), dest[1] + (dirY * 2 * dx)];\n      }\n    }\n    var newSearch = new BreadthFirstSearch(startNode, start, dest, this.board);\n    var parentNodes = newSearch.findParents();\n    this.path = newSearch.createPath(parentNodes, start, dest);\n    this.path.pop();\n  }\n\n  isReverseDir(signDx, signDy) {\n    var signVelX = Math.sign(this.vel[0]);\n    var signVelY = Math.sign(this.vel[1]);\n\n    if ((signVelX === 1 && signDx === -1) || (signVelX === -1 && signDx === 1) || (signVelY === 1 && signDy === -1) || (signVelY === -1 && signDy === 1)) {\n      return true;\n    }\n    return false;\n  }\n\n  bestNextMove(dest) {\n    var currentBlockPos = this.currentBlockPos(this.pos);\n    var currentNode = this.board.nodes['' + JSON.stringify(currentBlockPos)];\n    var bestNextNode = \"none\";\n    var smallestDistance = Infinity;\n    let that = this;\n    currentNode.neighbors.forEach( function(neighbor) {\n      var signDx = Math.sign(neighbor.pos[0] - that.pos[0]);\n      var signDy = Math.sign(neighbor.pos[1] - that.pos[1]);\n      if (that.isReverseDir(signDx, signDy)) {\n        return;\n      }\n\n      var currentDistance = Util.distance(neighbor.pos, dest);\n\n      if (currentDistance <= smallestDistance) {\n        bestNextNode = neighbor;\n        smallestDistance = currentDistance;\n      }\n    });\n    return bestNextNode.pos;\n  }\n\n  scatter() {\n    var currentBlockPos = this.currentBlockPos(this.pos);\n    var scatterDestPos = this.currentBlockPos([0,720]);\n\n    if ( this.board.intersections['' + JSON.stringify(this.pos)] || Util.equals(this.vel, [0,0] )) {\n      var currentNode = this.board.nodes['' + JSON.stringify(currentBlockPos)];\n      var betterNode = \"none\";\n      var smallestDistance = Infinity;\n\n      if (this.board.cageNodes['' + JSON.stringify(this.pos)]) {\n        currentNode = this.board.nodes['' + JSON.stringify(this.pos)];\n      }\n\n      currentNode.neighbors.forEach( function(neighbor) {\n        let dx = Math.sign(neighbor.pos[0] - this.pos[0]);\n        let dy = Math.sign(neighbor.pos[1] - this.pos[1]);\n        if(this.isReverseDir(dx, dy)) {\n          return;\n        }\n\n        let distance = Util.distance(neighbor.pos, scatterDestPos);\n        if (distance <= smallestDistance) {\n          betterNode = neighbor;\n          smallestDistance = distance;\n        }\n      }.bind(this));\n\n      this.vel = [Math.sign(betterNode.pos[0] - this.pos[0]) * 2, Math.sign(betterNode.pos[1] - this.pos[1]) * 2];\n    }\n\n    this.changeAvatar(Math.sign(this.vel[0]), Math.sign(this.vel[1]));\n    this.pos[0] = this.pos[0] + this.vel[0];\n    this.pos[1] = this.pos[1] + this.vel[1];\n\n  }\n\n\n\n  chase() {\n    var pacman = this.board.movingObjectsArr[4];\n    var pacmanCurrentBlock = pacman.currentBlockPos(pacman.pos);\n\n    var currentBlockPos = this.currentBlockPos(this.pos);\n\n    if(this.board.intersections['' + JSON.stringify(this.pos)]) {\n      var nextMove = this.bestNextMove(pacman.pos);\n      this.vel = [Math.sign(nextMove[0] - this.pos[0]) * 2, Math.sign(nextMove[1] - this.pos[1]) * 2];\n    } else if (this.board.cageNodes['' + JSON.stringify(this.pos)]) {\n      this.findPath({ start: this.pos, offset: 1 });\n      var nextMove = this.path[this.path.length - 1];\n      var velXDir = Math.sign(nextMove[0] - this.pos[0]) * 2;\n      var velYDir = Math.sign(nextMove[1] - this.pos[1]) * 2;\n      this.vel = [velXDir, velYDir];\n    }\n    this.changeAvatar(Math.sign(this.vel[0]), Math.sign(this.vel[1]));\n    this.pos[0] = this.pos[0] + this.vel[0];\n    this.pos[1] = this.pos[1] + this.vel[1];\n\n  }\n\n  changeAvatar(dx, dy) {\n    if (dx === 1) {\n      this.avatar = this.spritesLocations.inkyRight[this.animationFrame % 2];\n    } else if (dx === -1) {\n      this.avatar = this.spritesLocations.inkyLeft[this.animationFrame % 2];\n    } else if (dy === 1) {\n      this.avatar = this.spritesLocations.inkyDown[this.animationFrame % 2];\n    } else if (dy === -1) {\n      this.avatar = this.spritesLocations.inkyUp[this.animationFrame % 2];\n    }\n  }\n\n\n}\n\nmodule.exports = Inky;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/moving_objects/inky.js\n// module id = 38\n// module chunks = 0","const Game = require(\"./game\");\nconst GameView = require(\"./game_view\");\nconst Board = require('./board');\nconst Grids = require('./grids');\n\ndocument.addEventListener(\"DOMContentLoaded\", function(){\n\n  const grid = new Grids();\n  this.levelDimX = grid.LEVEL_ONE_GRID[0].length * 20 + 2;\n  this.levelDimY = grid.LEVEL_ONE_GRID.length * 20 + 2;\n\n  var playerEl = document.getElementById(\"player-layer\");\n  playerEl.width = this.levelDimX;\n  playerEl.height = this.levelDimY;\n  const ptx = playerEl.getContext(\"2d\");\n\n  var gridEl = document.getElementById(\"grid-layer\");\n  gridEl.width = this.levelDimX;\n  gridEl.height = this.levelDimY;\n  const gtx = gridEl.getContext(\"2d\");\n\n  var dotsEl = document.getElementById(\"dots-layer\");\n  dotsEl.width = this.levelDimX;\n  dotsEl.height = this.levelDimY;\n  const dotstx = dotsEl.getContext(\"2d\");\n\n  var canvasEl = document.getElementById(\"level-layer\");\n  canvasEl.width = this.levelDimX;\n  canvasEl.height = this.levelDimY;\n  const ctx = canvasEl.getContext(\"2d\");\n\n  var blinkyEl = document.getElementById(\"blinky-layer\");\n  blinkyEl.width = this.levelDimX;\n  blinkyEl.height = this.levelDimY;\n  const blinkytx = blinkyEl.getContext(\"2d\");\n\n  var pinkyEl = document.getElementById(\"pinky-layer\");\n  pinkyEl.width = this.levelDimX;\n  pinkyEl.height = this.levelDimY;\n  const pinkytx = pinkyEl.getContext(\"2d\");\n\n  var clydeEl = document.getElementById(\"clyde-layer\");\n  clydeEl.width = this.levelDimX;\n  clydeEl.height = this.levelDimY;\n  const clydetx = clydeEl.getContext(\"2d\");\n\n  var inkyEl = document.getElementById(\"inky-layer\");\n  inkyEl.width = this.levelDimX;\n  inkyEl.height = this.levelDimY;\n  const inkytx = inkyEl.getContext(\"2d\");\n\n  var scoreEl = document.getElementById(\"score-layer\");\n  scoreEl.width = this.levelDimX;\n  scoreEl.height = this.levelDimY;\n  const scoretx = scoreEl.getContext(\"2d\");\n\n  var menuEl = document.getElementById(\"menu-layer\");\n  menuEl.width = this.levelDimX;\n  menuEl.height = this.levelDimy;\n  const menutx = menuEl.getContext(\"2d\");\n\n\nconst board = new Board(grid.LEVEL_ONE_GRID, ctx, gtx, ptx, blinkytx, pinkytx, clydetx, inkytx, dotstx, scoretx, menutx);\nboard.initialize();\nconst game = new Game(board, board.movingObjectsArr[4], board.movingObjectsArr[0], board.movingObjectsArr[2], board.movingObjectsArr[3], board.movingObjectsArr[1], board.scoreBoard);\nnew GameView(game, ctx).start();\n\n\n\n\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/ms_pacman.js\n// module id = 39\n// module chunks = 0","const StationaryObject = require('./stationary_object');\n\nclass PlayerScore extends StationaryObject {\n  constructor(pos, sprites, dotstx, scoretx, board) {\n    super(pos, sprites, dotstx, scoretx);\n    this.avatar = this.spritesLocations['playerScore'];\n    this.board = board;\n    this.drawScore = this.drawScore.bind(this);\n    this.score;\n  }\n\n  drawScore() {\n   this.scoretx.font = '25px arcadePixelated';\n   this.scoretx.fillStyle = 'white';\n   let scoreText = \"Score: \" + this.board.scoreBoard.score;\n   this.scoretx.fillText(scoreText, this.pos[0], this.pos[1] + 10);\n }\n\n\n  draw() {\n    this.scoretx.clearRect(0, 0, 1000, 1000);\n    this.drawScore();\n  }\n}\n\nmodule.exports = PlayerScore;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/stationary_objects/player_score.js\n// module id = 40\n// module chunks = 0"],"sourceRoot":""}